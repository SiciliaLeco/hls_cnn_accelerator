-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity single_conv_test is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    imgtotal_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    imgtotal_ce0 : OUT STD_LOGIC;
    imgtotal_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    weitotal_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    weitotal_ce0 : OUT STD_LOGIC;
    weitotal_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    outtotal_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    outtotal_ce0 : OUT STD_LOGIC;
    outtotal_we0 : OUT STD_LOGIC;
    outtotal_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of single_conv_test is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "single_conv_test,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a12ti-csg325-1L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.470000,HLS_SYN_LAT=122578,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=3,HLS_SYN_FF=1580,HLS_SYN_LUT=2246,HLS_VERSION=2019_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (28 downto 0) := "00000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (28 downto 0) := "00000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (28 downto 0) := "00000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (28 downto 0) := "00000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (28 downto 0) := "00000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (28 downto 0) := "00000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (28 downto 0) := "00000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (28 downto 0) := "00001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (28 downto 0) := "00010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (28 downto 0) := "00100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (28 downto 0) := "01000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (28 downto 0) := "10000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (28 downto 0) := "00000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal kernel_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal kernel_ce0 : STD_LOGIC;
    signal kernel_we0 : STD_LOGIC;
    signal kernel_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal cal_conv_ce0 : STD_LOGIC;
    signal cal_conv_we0 : STD_LOGIC;
    signal cal_conv_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_ce1 : STD_LOGIC;
    signal cal_conv_we1 : STD_LOGIC;
    signal cal_conv_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_line_buffer_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_line_buffer_ce0 : STD_LOGIC;
    signal conv_line_buffer_we0 : STD_LOGIC;
    signal conv_line_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_line_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_line_buffer_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal pool_line_buffer_ce0 : STD_LOGIC;
    signal pool_line_buffer_we0 : STD_LOGIC;
    signal pool_line_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_line_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_pool_1_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cal_pool_0_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cal_pool_0_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal cal_pool_1_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal i_fu_661_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_reg_1288 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal sub_ln111_fu_691_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln111_reg_1293 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln109_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_708_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal c_fu_734_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_reg_1322 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal shl_ln_fu_744_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln_reg_1327 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln113_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_i_fu_762_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal img_i_reg_1335 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln117_fu_756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ker_i_fu_789_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ker_i_reg_1348 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal zext_ln121_fu_795_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_reg_1353 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln120_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_806_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_2_reg_1366 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal add_ln127_fu_812_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln127_reg_1371 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln125_fu_800_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln132_fu_834_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln132_reg_1376 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln127_fu_848_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln127_reg_1381 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_1_fu_858_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_1_reg_1389 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln129_fu_864_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln129_reg_1394 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln127_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_reg_1404 : STD_LOGIC_VECTOR (0 downto 0);
    signal cal_conv_addr_1_reg_1408 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv_line_buffer_add_reg_1413 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_6_fu_915_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_6_reg_1421 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal add_ln144_fu_921_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln144_reg_1426 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln143_fu_909_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln173_fu_932_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln173_reg_1436 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln148_fu_953_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln148_reg_1440 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal i_7_fu_963_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_7_reg_1448 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln171_fu_993_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln171_reg_1453 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln148_fu_957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln175_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln175_reg_1458 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln182_fu_1005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln182_reg_1462 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal trunc_ln150_fu_1014_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln150_reg_1472 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_1024_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_2_reg_1480 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln153_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln153_reg_1485 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln150_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal count_7_fu_1036_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal count_7_reg_1489 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_fu_1048_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i1_reg_1497 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln163_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln163_reg_1502 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln161_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_single_conv_calculat_fu_630_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_single_conv_calculat_fu_630_ap_ready : STD_LOGIC;
    signal grp_single_conv_calculat_fu_630_ap_done : STD_LOGIC;
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal count_8_fu_1060_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal count_8_reg_1511 : STD_LOGIC_VECTOR (31 downto 0);
    signal img_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_2_reg_1521 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal out_reg_1526 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal data_1_reg_1536 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal count_fu_1076_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_conv_line_buffer_shi_fu_620_ap_ready : STD_LOGIC;
    signal grp_conv_line_buffer_shi_fu_620_ap_done : STD_LOGIC;
    signal ap_block_state22_on_subcall_done : BOOLEAN;
    signal conv_output_addr_1_reg_1546 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_output_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv_output_load_reg_1551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal add_ln171_1_fu_1101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln171_1_reg_1556 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal and_ln182_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln182_reg_1564 : STD_LOGIC_VECTOR (0 downto 0);
    signal go_up_reg_1568 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal i_8_fu_1172_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_8_reg_1576 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal icmp_ln99_fu_1166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln188_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln188_reg_1586 : STD_LOGIC_VECTOR (0 downto 0);
    signal cal_pool_0_0_load_reg_1590 : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_pool_0_1_load_1_reg_1595 : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_pool_1_0_load_reg_1600 : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_pool_1_1_load_1_reg_1605 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_9_fu_1202_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_9_reg_1613 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal trunc_ln49_fu_1208_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln49_reg_1618 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln45_fu_1196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_3_fu_1242_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ans_fu_1277_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln47_fu_1236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv_output_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal conv_output_ce0 : STD_LOGIC;
    signal conv_output_we0 : STD_LOGIC;
    signal conv_output_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal img_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal img_ce0 : STD_LOGIC;
    signal img_we0 : STD_LOGIC;
    signal grp_conv_line_buffer_shi_fu_620_ap_start : STD_LOGIC;
    signal grp_conv_line_buffer_shi_fu_620_ap_idle : STD_LOGIC;
    signal grp_conv_line_buffer_shi_fu_620_data : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_line_buffer_shi_fu_620_conv_line_buffer_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_line_buffer_shi_fu_620_conv_line_buffer_ce0 : STD_LOGIC;
    signal grp_conv_line_buffer_shi_fu_620_conv_line_buffer_we0 : STD_LOGIC;
    signal grp_conv_line_buffer_shi_fu_620_conv_line_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_line_buffer_shi_fu_620_cal_conv_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_line_buffer_shi_fu_620_cal_conv_ce0 : STD_LOGIC;
    signal grp_conv_line_buffer_shi_fu_620_cal_conv_we0 : STD_LOGIC;
    signal grp_conv_line_buffer_shi_fu_620_cal_conv_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_line_buffer_shi_fu_620_cal_conv_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv_line_buffer_shi_fu_620_cal_conv_ce1 : STD_LOGIC;
    signal grp_conv_line_buffer_shi_fu_620_cal_conv_we1 : STD_LOGIC;
    signal grp_conv_line_buffer_shi_fu_620_cal_conv_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_single_conv_calculat_fu_630_ap_start : STD_LOGIC;
    signal grp_single_conv_calculat_fu_630_ap_idle : STD_LOGIC;
    signal grp_single_conv_calculat_fu_630_cal_conv_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_single_conv_calculat_fu_630_cal_conv_ce0 : STD_LOGIC;
    signal grp_single_conv_calculat_fu_630_kernel_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_single_conv_calculat_fu_630_kernel_ce0 : STD_LOGIC;
    signal i_0_reg_324 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln110_fu_702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_0_reg_335 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_0_reg_346 : STD_LOGIC_VECTOR (4 downto 0);
    signal img_i_0_reg_358 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ker_i_0_reg_370 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i1_0_reg_381 : STD_LOGIC_VECTOR (1 downto 0);
    signal count_0_reg_392 : STD_LOGIC_VECTOR (4 downto 0);
    signal j2_0_reg_404 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal count_1_reg_415 : STD_LOGIC_VECTOR (4 downto 0);
    signal i3_0_reg_425 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal count_2_reg_437 : STD_LOGIC_VECTOR (4 downto 0);
    signal count_3_reg_448 : STD_LOGIC_VECTOR (31 downto 0);
    signal i4_0_reg_460 : STD_LOGIC_VECTOR (2 downto 0);
    signal count_4_reg_471 : STD_LOGIC_VECTOR (31 downto 0);
    signal count_6_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal j5_0_reg_483 : STD_LOGIC_VECTOR (2 downto 0);
    signal count_5_reg_495 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal out_3_reg_506 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_4_reg_527 : STD_LOGIC_VECTOR (31 downto 0);
    signal i17_0_reg_516 : STD_LOGIC_VECTOR (1 downto 0);
    signal out_5_reg_550 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_0_i_reg_561 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal i_0_i1_reg_573 : STD_LOGIC_VECTOR (1 downto 0);
    signal ans_0_i_reg_584 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_0_i_reg_597 : STD_LOGIC_VECTOR (1 downto 0);
    signal ans_1_i_reg_608 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv_line_buffer_shi_fu_620_ap_start_reg : STD_LOGIC := '0';
    signal grp_single_conv_calculat_fu_630_ap_start_reg : STD_LOGIC := '0';
    signal sext_ln111_fu_723_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln118_fu_773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln118_1_fu_778_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_fu_870_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln132_fu_894_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln133_fu_904_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln144_fu_927_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln144_2_fu_948_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln166_fu_1066_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln156_fu_1071_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln171_fu_1091_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln171_1_fu_1096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln100_fu_1178_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln100_1_fu_1191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln191_fu_1221_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln177_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal out_1_fu_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_count_1_fu_140 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_count_fu_1215_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_667_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_1_fu_679_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln111_fu_675_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln111_1_fu_687_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln111_2_fu_714_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln111_fu_718_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln118_fu_740_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln117_fu_752_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln118_fu_768_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_822_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln132_1_fu_830_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln132_fu_818_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_4_fu_840_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln132_3_fu_885_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln132_fu_889_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln132_2_fu_881_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln133_fu_899_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln144_1_fu_938_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln144_1_fu_942_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_969_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_981_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln171_fu_977_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln171_2_fu_989_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln171_3_fu_1082_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln171_fu_1086_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_2_fu_1109_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal out_count_fu_1215_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln191_fu_1221_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln49_1_fu_1248_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln49_fu_1252_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_1_fu_1258_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln49_2_fu_1264_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln49_fu_1271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (28 downto 0);

    component conv_line_buffer_shi IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data : IN STD_LOGIC_VECTOR (31 downto 0);
        conv_line_buffer_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        conv_line_buffer_ce0 : OUT STD_LOGIC;
        conv_line_buffer_we0 : OUT STD_LOGIC;
        conv_line_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv_line_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cal_conv_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cal_conv_ce0 : OUT STD_LOGIC;
        cal_conv_we0 : OUT STD_LOGIC;
        cal_conv_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cal_conv_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        cal_conv_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cal_conv_ce1 : OUT STD_LOGIC;
        cal_conv_we1 : OUT STD_LOGIC;
        cal_conv_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        cal_conv_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component single_conv_calculat IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        cal_conv_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cal_conv_ce0 : OUT STD_LOGIC;
        cal_conv_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        kernel_ce0 : OUT STD_LOGIC;
        kernel_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component single_conv_test_bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component single_conv_test_cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component single_conv_test_dEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component single_conv_test_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component single_conv_test_fYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component single_conv_test_g8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    kernel_U : component single_conv_test_bkb
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => kernel_address0,
        ce0 => kernel_ce0,
        we0 => kernel_we0,
        d0 => weitotal_q0,
        q0 => kernel_q0);

    cal_conv_U : component single_conv_test_cud
    generic map (
        DataWidth => 32,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cal_conv_address0,
        ce0 => cal_conv_ce0,
        we0 => cal_conv_we0,
        d0 => cal_conv_d0,
        q0 => cal_conv_q0,
        address1 => grp_conv_line_buffer_shi_fu_620_cal_conv_address1,
        ce1 => cal_conv_ce1,
        we1 => cal_conv_we1,
        d1 => grp_conv_line_buffer_shi_fu_620_cal_conv_d1,
        q1 => cal_conv_q1);

    conv_line_buffer_U : component single_conv_test_dEe
    generic map (
        DataWidth => 32,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_line_buffer_address0,
        ce0 => conv_line_buffer_ce0,
        we0 => conv_line_buffer_we0,
        d0 => conv_line_buffer_d0,
        q0 => conv_line_buffer_q0);

    pool_line_buffer_U : component single_conv_test_eOg
    generic map (
        DataWidth => 32,
        AddressRange => 6,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => pool_line_buffer_address0,
        ce0 => pool_line_buffer_ce0,
        we0 => pool_line_buffer_we0,
        d0 => pool_line_buffer_d0,
        q0 => pool_line_buffer_q0);

    conv_output_U : component single_conv_test_fYi
    generic map (
        DataWidth => 32,
        AddressRange => 36,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv_output_address0,
        ce0 => conv_output_ce0,
        we0 => conv_output_we0,
        d0 => conv_output_d0,
        q0 => conv_output_q0);

    img_U : component single_conv_test_g8j
    generic map (
        DataWidth => 32,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => img_address0,
        ce0 => img_ce0,
        we0 => img_we0,
        d0 => imgtotal_q0,
        q0 => img_q0);

    grp_conv_line_buffer_shi_fu_620 : component conv_line_buffer_shi
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv_line_buffer_shi_fu_620_ap_start,
        ap_done => grp_conv_line_buffer_shi_fu_620_ap_done,
        ap_idle => grp_conv_line_buffer_shi_fu_620_ap_idle,
        ap_ready => grp_conv_line_buffer_shi_fu_620_ap_ready,
        data => grp_conv_line_buffer_shi_fu_620_data,
        conv_line_buffer_address0 => grp_conv_line_buffer_shi_fu_620_conv_line_buffer_address0,
        conv_line_buffer_ce0 => grp_conv_line_buffer_shi_fu_620_conv_line_buffer_ce0,
        conv_line_buffer_we0 => grp_conv_line_buffer_shi_fu_620_conv_line_buffer_we0,
        conv_line_buffer_d0 => grp_conv_line_buffer_shi_fu_620_conv_line_buffer_d0,
        conv_line_buffer_q0 => conv_line_buffer_q0,
        cal_conv_address0 => grp_conv_line_buffer_shi_fu_620_cal_conv_address0,
        cal_conv_ce0 => grp_conv_line_buffer_shi_fu_620_cal_conv_ce0,
        cal_conv_we0 => grp_conv_line_buffer_shi_fu_620_cal_conv_we0,
        cal_conv_d0 => grp_conv_line_buffer_shi_fu_620_cal_conv_d0,
        cal_conv_q0 => cal_conv_q0,
        cal_conv_address1 => grp_conv_line_buffer_shi_fu_620_cal_conv_address1,
        cal_conv_ce1 => grp_conv_line_buffer_shi_fu_620_cal_conv_ce1,
        cal_conv_we1 => grp_conv_line_buffer_shi_fu_620_cal_conv_we1,
        cal_conv_d1 => grp_conv_line_buffer_shi_fu_620_cal_conv_d1,
        cal_conv_q1 => cal_conv_q1);

    grp_single_conv_calculat_fu_630 : component single_conv_calculat
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_single_conv_calculat_fu_630_ap_start,
        ap_done => grp_single_conv_calculat_fu_630_ap_done,
        ap_idle => grp_single_conv_calculat_fu_630_ap_idle,
        ap_ready => grp_single_conv_calculat_fu_630_ap_ready,
        cal_conv_address0 => grp_single_conv_calculat_fu_630_cal_conv_address0,
        cal_conv_ce0 => grp_single_conv_calculat_fu_630_cal_conv_ce0,
        cal_conv_q0 => cal_conv_q0,
        kernel_address0 => grp_single_conv_calculat_fu_630_kernel_address0,
        kernel_ce0 => grp_single_conv_calculat_fu_630_kernel_ce0,
        kernel_q0 => kernel_q0,
        ap_return => grp_single_conv_calculat_fu_630_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv_line_buffer_shi_fu_620_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv_line_buffer_shi_fu_620_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                    grp_conv_line_buffer_shi_fu_620_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv_line_buffer_shi_fu_620_ap_ready = ap_const_logic_1)) then 
                    grp_conv_line_buffer_shi_fu_620_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_single_conv_calculat_fu_630_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_single_conv_calculat_fu_630_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln163_fu_1054_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln161_fu_1042_p2 = ap_const_lv1_0)) or ((icmp_ln153_fu_1030_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln150_fu_1018_p2 = ap_const_lv1_0)))) then 
                    grp_single_conv_calculat_fu_630_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_single_conv_calculat_fu_630_ap_ready = ap_const_logic_1)) then 
                    grp_single_conv_calculat_fu_630_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ans_0_i_reg_584_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln47_fu_1236_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                ans_0_i_reg_584 <= ans_1_i_reg_608;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state26) and ((((ap_const_lv1_1 = and_ln188_fu_1183_p2) and (ap_const_lv1_1 = and_ln182_reg_1564)) or ((ap_const_lv1_1 = and_ln188_fu_1183_p2) and (icmp_ln99_fu_1166_p2 = ap_const_lv1_1))) or ((ap_const_lv1_1 = and_ln188_fu_1183_p2) and (icmp_ln175_reg_1458 = ap_const_lv1_1))))) then 
                ans_0_i_reg_584 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ans_1_i_reg_608_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln188_reg_1586) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln45_fu_1196_p2 = ap_const_lv1_0))) then 
                ans_1_i_reg_608 <= ans_0_i_reg_584;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln47_fu_1236_p2 = ap_const_lv1_0))) then 
                ans_1_i_reg_608 <= ans_fu_1277_p3;
            end if; 
        end if;
    end process;

    c_0_reg_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln148_fu_957_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                c_0_reg_346 <= c_reg_1322;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln109_fu_655_p2 = ap_const_lv1_1))) then 
                c_0_reg_346 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    cal_pool_0_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                cal_pool_0_0 <= cal_pool_0_1;
            elsif (((icmp_ln177_fu_1119_p2 = ap_const_lv1_1) and (icmp_ln175_reg_1458 = ap_const_lv1_1) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24) and (trunc_ln150_reg_1472 = ap_const_lv1_0))) then 
                cal_pool_0_0 <= add_ln171_1_fu_1101_p2;
            end if; 
        end if;
    end process;

    cal_pool_0_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                cal_pool_0_1 <= pool_line_buffer_q0;
            elsif (((icmp_ln177_fu_1119_p2 = ap_const_lv1_1) and (trunc_ln150_reg_1472 = ap_const_lv1_1) and (icmp_ln175_reg_1458 = ap_const_lv1_1) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                cal_pool_0_1 <= add_ln171_1_fu_1101_p2;
            end if; 
        end if;
    end process;

    cal_pool_1_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                cal_pool_1_0 <= cal_pool_1_1;
            elsif (((ap_const_lv1_1 = and_ln182_fu_1125_p2) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24) and (trunc_ln150_reg_1472 = ap_const_lv1_0) and (icmp_ln175_reg_1458 = ap_const_lv1_0))) then 
                cal_pool_1_0 <= add_ln171_1_fu_1101_p2;
            end if; 
        end if;
    end process;

    cal_pool_1_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                cal_pool_1_1 <= add_ln171_1_reg_1556;
            elsif (((ap_const_lv1_1 = and_ln182_fu_1125_p2) and (trunc_ln150_reg_1472 = ap_const_lv1_1) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln175_reg_1458 = ap_const_lv1_0))) then 
                cal_pool_1_1 <= add_ln171_1_fu_1101_p2;
            end if; 
        end if;
    end process;

    count_0_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln120_fu_783_p2 = ap_const_lv1_1))) then 
                count_0_reg_392 <= ap_const_lv5_0;
            elsif (((icmp_ln127_fu_852_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                count_0_reg_392 <= add_ln127_reg_1371;
            end if; 
        end if;
    end process;

    count_1_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                count_1_reg_415 <= add_ln129_reg_1394;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_800_p2 = ap_const_lv1_0))) then 
                count_1_reg_415 <= count_0_reg_392;
            end if; 
        end if;
    end process;

    count_2_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_800_p2 = ap_const_lv1_1))) then 
                count_2_reg_437 <= ap_const_lv5_10;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                count_2_reg_437 <= add_ln144_reg_1426;
            end if; 
        end if;
    end process;

    count_3_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln150_fu_1018_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                count_3_reg_448 <= count_4_reg_471;
            elsif (((icmp_ln143_fu_909_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                count_3_reg_448 <= ap_const_lv32_13;
            end if; 
        end if;
    end process;

    count_4_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and ((icmp_ln173_reg_1436 = ap_const_lv1_0) or ((icmp_ln45_fu_1196_p2 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln188_reg_1586))))) then 
                count_4_reg_471 <= count_6_reg_539;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln148_fu_957_p2 = ap_const_lv1_0))) then 
                count_4_reg_471 <= count_3_reg_448;
            end if; 
        end if;
    end process;

    count_5_reg_495_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv_line_buffer_shi_fu_620_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                count_5_reg_495 <= count_8_reg_1511;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln150_fu_1018_p2 = ap_const_lv1_0) and (icmp_ln153_fu_1030_p2 = ap_const_lv1_0))) then 
                count_5_reg_495 <= count_4_reg_471;
            end if; 
        end if;
    end process;

    count_6_reg_539_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln161_fu_1042_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                count_6_reg_539 <= count_7_reg_1489;
            elsif (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                count_6_reg_539 <= count_fu_1076_p2;
            end if; 
        end if;
    end process;

    i17_0_reg_516_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv_line_buffer_shi_fu_620_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                i17_0_reg_516 <= i1_reg_1497;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln150_fu_1018_p2 = ap_const_lv1_0) and (icmp_ln153_fu_1030_p2 = ap_const_lv1_0))) then 
                i17_0_reg_516 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i1_0_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln120_fu_783_p2 = ap_const_lv1_1))) then 
                i1_0_reg_381 <= ap_const_lv2_0;
            elsif (((icmp_ln127_fu_852_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i1_0_reg_381 <= i_2_reg_1366;
            end if; 
        end if;
    end process;

    i3_0_reg_425_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_800_p2 = ap_const_lv1_1))) then 
                i3_0_reg_425 <= ap_const_lv2_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i3_0_reg_425 <= i_6_reg_1421;
            end if; 
        end if;
    end process;

    i4_0_reg_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln150_fu_1018_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                i4_0_reg_460 <= i_7_reg_1448;
            elsif (((icmp_ln143_fu_909_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i4_0_reg_460 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_i1_reg_573_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln47_fu_1236_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                i_0_i1_reg_573 <= i_9_reg_1613;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state26) and ((((ap_const_lv1_1 = and_ln188_fu_1183_p2) and (ap_const_lv1_1 = and_ln182_reg_1564)) or ((ap_const_lv1_1 = and_ln188_fu_1183_p2) and (icmp_ln99_fu_1166_p2 = ap_const_lv1_1))) or ((ap_const_lv1_1 = and_ln188_fu_1183_p2) and (icmp_ln175_reg_1458 = ap_const_lv1_1))))) then 
                i_0_i1_reg_573 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    i_0_i_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                i_0_i_reg_561 <= i_8_reg_1576;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                i_0_i_reg_561 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    i_0_reg_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln110_fu_702_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_reg_324 <= i_reg_1288;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_324 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    img_i_0_reg_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_fu_728_p2 = ap_const_lv1_0))) then 
                img_i_0_reg_358 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                img_i_0_reg_358 <= img_i_reg_1335;
            end if; 
        end if;
    end process;

    j2_0_reg_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                j2_0_reg_404 <= j_1_reg_1389;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_800_p2 = ap_const_lv1_0))) then 
                j2_0_reg_404 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j5_0_reg_483_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and ((icmp_ln173_reg_1436 = ap_const_lv1_0) or ((icmp_ln45_fu_1196_p2 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln188_reg_1586))))) then 
                j5_0_reg_483 <= j_2_reg_1480;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln148_fu_957_p2 = ap_const_lv1_0))) then 
                j5_0_reg_483 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_0_i_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln188_reg_1586) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln45_fu_1196_p2 = ap_const_lv1_0))) then 
                j_0_i_reg_597 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln47_fu_1236_p2 = ap_const_lv1_0))) then 
                j_0_i_reg_597 <= j_3_fu_1242_p2;
            end if; 
        end if;
    end process;

    j_0_reg_335_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln109_fu_655_p2 = ap_const_lv1_0))) then 
                j_0_reg_335 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln110_fu_702_p2 = ap_const_lv1_0))) then 
                j_0_reg_335 <= j_fu_708_p2;
            end if; 
        end if;
    end process;

    ker_i_0_reg_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln117_fu_756_p2 = ap_const_lv1_1))) then 
                ker_i_0_reg_370 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                ker_i_0_reg_370 <= ker_i_reg_1348;
            end if; 
        end if;
    end process;

    out_3_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv_line_buffer_shi_fu_620_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                out_3_reg_506 <= out_4_reg_527;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln150_fu_1018_p2 = ap_const_lv1_0) and (icmp_ln153_fu_1030_p2 = ap_const_lv1_0))) then 
                out_3_reg_506 <= out_1_fu_136;
            end if; 
        end if;
    end process;

    out_4_reg_527_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln161_fu_1042_p2 = ap_const_lv1_0) and (icmp_ln163_fu_1054_p2 = ap_const_lv1_0))) then 
                out_4_reg_527 <= out_3_reg_506;
            elsif (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (icmp_ln163_reg_1502 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                out_4_reg_527 <= grp_single_conv_calculat_fu_630_ap_return;
            end if; 
        end if;
    end process;

    out_5_reg_550_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln161_fu_1042_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                out_5_reg_550 <= out_3_reg_506;
            elsif (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                out_5_reg_550 <= out_reg_1526;
            end if; 
        end if;
    end process;

    out_count_1_fu_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln45_fu_1196_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln188_reg_1586) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                out_count_1_fu_140 <= out_count_fu_1215_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln109_fu_655_p2 = ap_const_lv1_1))) then 
                out_count_1_fu_140 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_800_p2 = ap_const_lv1_0))) then
                add_ln127_reg_1371 <= add_ln127_fu_812_p2;
                sub_ln132_reg_1376 <= sub_ln132_fu_834_p2;
                    zext_ln127_reg_1381(4 downto 3) <= zext_ln127_fu_848_p1(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln127_fu_852_p2 = ap_const_lv1_0))) then
                add_ln129_reg_1394 <= add_ln129_fu_864_p2;
                cal_conv_addr_1_reg_1408 <= sext_ln132_fu_894_p1(4 - 1 downto 0);
                conv_line_buffer_add_reg_1413 <= zext_ln133_fu_904_p1(4 - 1 downto 0);
                icmp_ln130_reg_1404 <= icmp_ln130_fu_875_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln143_fu_909_p2 = ap_const_lv1_0))) then
                add_ln144_reg_1426 <= add_ln144_fu_921_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                add_ln171_1_reg_1556 <= add_ln171_1_fu_1101_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln175_reg_1458 = ap_const_lv1_0))) then
                and_ln182_reg_1564 <= and_ln182_fu_1125_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and ((icmp_ln175_reg_1458 = ap_const_lv1_1) or ((icmp_ln99_fu_1166_p2 = ap_const_lv1_1) or (ap_const_lv1_1 = and_ln182_reg_1564))))) then
                and_ln188_reg_1586 <= and_ln188_fu_1183_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                c_reg_1322 <= c_fu_734_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and ((((ap_const_lv1_1 = and_ln188_fu_1183_p2) and (ap_const_lv1_1 = and_ln182_reg_1564)) or ((ap_const_lv1_1 = and_ln188_fu_1183_p2) and (icmp_ln99_fu_1166_p2 = ap_const_lv1_1))) or ((ap_const_lv1_1 = and_ln188_fu_1183_p2) and (icmp_ln175_reg_1458 = ap_const_lv1_1))))) then
                cal_pool_0_0_load_reg_1590 <= cal_pool_0_0;
                cal_pool_0_1_load_1_reg_1595 <= cal_pool_0_1;
                cal_pool_1_0_load_reg_1600 <= cal_pool_1_0;
                cal_pool_1_1_load_1_reg_1605 <= cal_pool_1_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                conv_output_addr_1_reg_1546 <= sext_ln171_fu_1091_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                conv_output_load_reg_1551 <= conv_output_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln150_fu_1018_p2 = ap_const_lv1_0) and (icmp_ln153_fu_1030_p2 = ap_const_lv1_0))) then
                count_7_reg_1489 <= count_7_fu_1036_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                count_8_reg_1511 <= count_8_fu_1060_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                data_1_reg_1536 <= img_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                data_2_reg_1521 <= img_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                go_up_reg_1568 <= cal_pool_1_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                i1_reg_1497 <= i1_fu_1048_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                i_2_reg_1366 <= i_2_fu_806_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                i_6_reg_1421 <= i_6_fu_915_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                i_7_reg_1448 <= i_7_fu_963_p2;
                trunc_ln148_reg_1440 <= trunc_ln148_fu_953_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = and_ln182_reg_1564) and (icmp_ln175_reg_1458 = ap_const_lv1_0))) then
                i_8_reg_1576 <= i_8_fu_1172_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln188_reg_1586) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                i_9_reg_1613 <= i_9_fu_1202_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1288 <= i_fu_661_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln150_fu_1018_p2 = ap_const_lv1_0))) then
                icmp_ln153_reg_1485 <= icmp_ln153_fu_1030_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln161_fu_1042_p2 = ap_const_lv1_0))) then
                icmp_ln163_reg_1502 <= icmp_ln163_fu_1054_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln143_fu_909_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                icmp_ln173_reg_1436 <= icmp_ln173_fu_932_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln148_fu_957_p2 = ap_const_lv1_0))) then
                icmp_ln175_reg_1458 <= icmp_ln175_fu_999_p2;
                icmp_ln182_reg_1462 <= icmp_ln182_fu_1005_p2;
                    sub_ln171_reg_1453(6 downto 1) <= sub_ln171_fu_993_p2(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                img_i_reg_1335 <= img_i_fu_762_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                j_1_reg_1389 <= j_1_fu_858_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                j_2_reg_1480 <= j_2_fu_1024_p2;
                trunc_ln150_reg_1472 <= trunc_ln150_fu_1014_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                ker_i_reg_1348 <= ker_i_fu_789_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state28) and ((icmp_ln173_reg_1436 = ap_const_lv1_0) or ((icmp_ln45_fu_1196_p2 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln188_reg_1586))))) then
                out_1_fu_136 <= out_5_reg_550;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_single_conv_calculat_fu_630_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                out_reg_1526 <= grp_single_conv_calculat_fu_630_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_fu_728_p2 = ap_const_lv1_0))) then
                    shl_ln_reg_1327(9 downto 6) <= shl_ln_fu_744_p3(9 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln109_fu_655_p2 = ap_const_lv1_0))) then
                    sub_ln111_reg_1293(6 downto 1) <= sub_ln111_fu_691_p2(6 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln188_reg_1586) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28) and (icmp_ln45_fu_1196_p2 = ap_const_lv1_0))) then
                trunc_ln49_reg_1618 <= trunc_ln49_fu_1208_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln120_fu_783_p2 = ap_const_lv1_0))) then
                    zext_ln121_reg_1353(3 downto 0) <= zext_ln121_fu_795_p1(3 downto 0);
            end if;
        end if;
    end process;
    sub_ln111_reg_1293(0) <= '0';
    shl_ln_reg_1327(5 downto 0) <= "000000";
    zext_ln121_reg_1353(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln127_reg_1381(2 downto 0) <= "000";
    zext_ln127_reg_1381(5) <= '0';
    sub_ln171_reg_1453(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln109_fu_655_p2, ap_CS_fsm_state3, ap_CS_fsm_state4, icmp_ln113_fu_728_p2, ap_CS_fsm_state5, icmp_ln117_fu_756_p2, ap_CS_fsm_state7, icmp_ln120_fu_783_p2, ap_CS_fsm_state9, icmp_ln125_fu_800_p2, ap_CS_fsm_state10, icmp_ln127_fu_852_p2, ap_CS_fsm_state12, icmp_ln143_fu_909_p2, icmp_ln173_reg_1436, ap_CS_fsm_state14, icmp_ln148_fu_957_p2, icmp_ln175_reg_1458, ap_CS_fsm_state15, icmp_ln153_fu_1030_p2, icmp_ln150_fu_1018_p2, ap_CS_fsm_state16, icmp_ln161_fu_1042_p2, ap_CS_fsm_state17, grp_single_conv_calculat_fu_630_ap_done, ap_block_state17_on_subcall_done, ap_CS_fsm_state20, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_ap_done, ap_block_state22_on_subcall_done, ap_CS_fsm_state24, and_ln182_fu_1125_p2, and_ln182_reg_1564, ap_CS_fsm_state26, icmp_ln99_fu_1166_p2, and_ln188_reg_1586, ap_CS_fsm_state28, icmp_ln45_fu_1196_p2, ap_CS_fsm_state29, icmp_ln47_fu_1236_p2, icmp_ln110_fu_702_p2, ap_CS_fsm_state19)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln109_fu_655_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln110_fu_702_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_fu_728_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln117_fu_756_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln120_fu_783_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln125_fu_800_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln127_fu_852_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln143_fu_909_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln148_fu_957_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln150_fu_1018_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state15) and (icmp_ln150_fu_1018_p2 = ap_const_lv1_0) and (icmp_ln153_fu_1030_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln161_fu_1042_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((grp_conv_line_buffer_shi_fu_620_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                if (((grp_single_conv_calculat_fu_630_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (((ap_const_lv1_1 = and_ln182_fu_1125_p2) and (icmp_ln173_reg_1436 = ap_const_lv1_1)) or ((icmp_ln175_reg_1458 = ap_const_lv1_1) and (icmp_ln173_reg_1436 = ap_const_lv1_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                elsif (((icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = and_ln182_fu_1125_p2) and (icmp_ln175_reg_1458 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and ((icmp_ln175_reg_1458 = ap_const_lv1_1) or ((icmp_ln99_fu_1166_p2 = ap_const_lv1_1) or (ap_const_lv1_1 = and_ln182_reg_1564))))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and ((icmp_ln173_reg_1436 = ap_const_lv1_0) or ((icmp_ln45_fu_1196_p2 = ap_const_lv1_1) or (ap_const_lv1_0 = and_ln188_reg_1586))))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state29 => 
                if (((icmp_ln47_fu_1236_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln111_fu_718_p2 <= std_logic_vector(unsigned(sub_ln111_reg_1293) + unsigned(zext_ln111_2_fu_714_p1));
    add_ln118_fu_768_p2 <= std_logic_vector(unsigned(shl_ln_reg_1327) + unsigned(zext_ln117_fu_752_p1));
    add_ln127_fu_812_p2 <= std_logic_vector(unsigned(count_0_reg_392) + unsigned(ap_const_lv5_8));
    add_ln129_fu_864_p2 <= std_logic_vector(unsigned(count_1_reg_415) + unsigned(ap_const_lv5_1));
    add_ln132_fu_889_p2 <= std_logic_vector(unsigned(sub_ln132_reg_1376) + unsigned(zext_ln132_3_fu_885_p1));
    add_ln133_fu_899_p2 <= std_logic_vector(unsigned(zext_ln127_reg_1381) + unsigned(zext_ln132_2_fu_881_p1));
    add_ln144_1_fu_942_p2 <= std_logic_vector(unsigned(zext_ln144_1_fu_938_p1) + unsigned(ap_const_lv4_6));
    add_ln144_fu_921_p2 <= std_logic_vector(unsigned(count_2_reg_437) + unsigned(ap_const_lv5_1));
    add_ln171_1_fu_1101_p2 <= std_logic_vector(unsigned(out_5_reg_550) + unsigned(conv_output_load_reg_1551));
    add_ln171_fu_1086_p2 <= std_logic_vector(unsigned(sub_ln171_reg_1453) + unsigned(zext_ln171_3_fu_1082_p1));
    and_ln182_fu_1125_p2 <= (icmp_ln182_reg_1462 and icmp_ln177_fu_1119_p2);
    and_ln188_fu_1183_p2 <= (trunc_ln150_reg_1472 and trunc_ln148_reg_1440);
    ans_fu_1277_p3 <= 
        ans_1_i_reg_608 when (icmp_ln49_fu_1271_p2(0) = '1') else 
        select_ln49_2_fu_1264_p3;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state17_on_subcall_done_assign_proc : process(icmp_ln163_reg_1502, grp_single_conv_calculat_fu_630_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_single_conv_calculat_fu_630_ap_done = ap_const_logic_0) and (icmp_ln163_reg_1502 = ap_const_lv1_1));
    end process;


    ap_block_state22_on_subcall_done_assign_proc : process(icmp_ln153_reg_1485, grp_conv_line_buffer_shi_fu_620_ap_done)
    begin
                ap_block_state22_on_subcall_done <= ((grp_conv_line_buffer_shi_fu_620_ap_done = ap_const_logic_0) and (icmp_ln153_reg_1485 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state4, icmp_ln113_fu_728_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_fu_728_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state4, icmp_ln113_fu_728_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln113_fu_728_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    c_fu_734_p2 <= std_logic_vector(unsigned(c_0_reg_346) + unsigned(ap_const_lv5_1));

    cal_conv_address0_assign_proc : process(cal_conv_addr_1_reg_1408, icmp_ln153_reg_1485, icmp_ln163_reg_1502, ap_CS_fsm_state17, ap_CS_fsm_state20, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_cal_conv_address0, grp_single_conv_calculat_fu_630_cal_conv_address0, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state19, zext_ln144_2_fu_948_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            cal_conv_address0 <= zext_ln144_2_fu_948_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            cal_conv_address0 <= cal_conv_addr_1_reg_1408;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or ((icmp_ln163_reg_1502 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            cal_conv_address0 <= grp_single_conv_calculat_fu_630_cal_conv_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            cal_conv_address0 <= grp_conv_line_buffer_shi_fu_620_cal_conv_address0;
        else 
            cal_conv_address0 <= "XXXX";
        end if; 
    end process;


    cal_conv_ce0_assign_proc : process(icmp_ln153_reg_1485, icmp_ln163_reg_1502, ap_CS_fsm_state17, ap_CS_fsm_state20, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_cal_conv_ce0, grp_single_conv_calculat_fu_630_cal_conv_ce0, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            cal_conv_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or ((icmp_ln163_reg_1502 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            cal_conv_ce0 <= grp_single_conv_calculat_fu_630_cal_conv_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            cal_conv_ce0 <= grp_conv_line_buffer_shi_fu_620_cal_conv_ce0;
        else 
            cal_conv_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cal_conv_ce1_assign_proc : process(icmp_ln153_reg_1485, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_cal_conv_ce1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            cal_conv_ce1 <= grp_conv_line_buffer_shi_fu_620_cal_conv_ce1;
        else 
            cal_conv_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cal_conv_d0_assign_proc : process(icmp_ln153_reg_1485, img_q0, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_cal_conv_d0, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            cal_conv_d0 <= img_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            cal_conv_d0 <= grp_conv_line_buffer_shi_fu_620_cal_conv_d0;
        else 
            cal_conv_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    cal_conv_we0_assign_proc : process(icmp_ln130_reg_1404, icmp_ln153_reg_1485, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_cal_conv_we0, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((icmp_ln130_reg_1404 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            cal_conv_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            cal_conv_we0 <= grp_conv_line_buffer_shi_fu_620_cal_conv_we0;
        else 
            cal_conv_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cal_conv_we1_assign_proc : process(icmp_ln153_reg_1485, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_cal_conv_we1, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or ((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            cal_conv_we1 <= grp_conv_line_buffer_shi_fu_620_cal_conv_we1;
        else 
            cal_conv_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv_line_buffer_address0_assign_proc : process(conv_line_buffer_add_reg_1413, icmp_ln153_reg_1485, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_conv_line_buffer_address0, ap_CS_fsm_state11, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_line_buffer_address0 <= conv_line_buffer_add_reg_1413;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            conv_line_buffer_address0 <= grp_conv_line_buffer_shi_fu_620_conv_line_buffer_address0;
        else 
            conv_line_buffer_address0 <= "XXXX";
        end if; 
    end process;


    conv_line_buffer_ce0_assign_proc : process(icmp_ln153_reg_1485, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_conv_line_buffer_ce0, ap_CS_fsm_state11, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_line_buffer_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            conv_line_buffer_ce0 <= grp_conv_line_buffer_shi_fu_620_conv_line_buffer_ce0;
        else 
            conv_line_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_line_buffer_d0_assign_proc : process(icmp_ln153_reg_1485, img_q0, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_conv_line_buffer_d0, ap_CS_fsm_state11, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_line_buffer_d0 <= img_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            conv_line_buffer_d0 <= grp_conv_line_buffer_shi_fu_620_conv_line_buffer_d0;
        else 
            conv_line_buffer_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_line_buffer_we0_assign_proc : process(icmp_ln153_reg_1485, ap_CS_fsm_state22, grp_conv_line_buffer_shi_fu_620_conv_line_buffer_we0, ap_CS_fsm_state11, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            conv_line_buffer_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            conv_line_buffer_we0 <= grp_conv_line_buffer_shi_fu_620_conv_line_buffer_we0;
        else 
            conv_line_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_output_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state22, conv_output_addr_1_reg_1546, ap_CS_fsm_state24, sext_ln111_fu_723_p1, sext_ln171_fu_1091_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv_output_address0 <= conv_output_addr_1_reg_1546;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv_output_address0 <= sext_ln171_fu_1091_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv_output_address0 <= sext_ln111_fu_723_p1(6 - 1 downto 0);
        else 
            conv_output_address0 <= "XXXXXX";
        end if; 
    end process;


    conv_output_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state22, ap_block_state22_on_subcall_done, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_boolean_0 = ap_block_state22_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            conv_output_ce0 <= ap_const_logic_1;
        else 
            conv_output_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv_output_d0_assign_proc : process(ap_CS_fsm_state3, add_ln171_1_fu_1101_p2, ap_CS_fsm_state24)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv_output_d0 <= add_ln171_1_fu_1101_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv_output_d0 <= ap_const_lv32_0;
        else 
            conv_output_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv_output_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state24, icmp_ln110_fu_702_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln110_fu_702_p2 = ap_const_lv1_0)))) then 
            conv_output_we0 <= ap_const_logic_1;
        else 
            conv_output_we0 <= ap_const_logic_0;
        end if; 
    end process;

    count_7_fu_1036_p2 <= std_logic_vector(signed(count_4_reg_471) + signed(ap_const_lv32_3));
    count_8_fu_1060_p2 <= std_logic_vector(signed(count_5_reg_495) + signed(ap_const_lv32_1));
    count_fu_1076_p2 <= std_logic_vector(signed(count_4_reg_471) + signed(ap_const_lv32_1));
    grp_conv_line_buffer_shi_fu_620_ap_start <= grp_conv_line_buffer_shi_fu_620_ap_start_reg;

    grp_conv_line_buffer_shi_fu_620_data_assign_proc : process(icmp_ln153_reg_1485, data_2_reg_1521, data_1_reg_1536, ap_CS_fsm_state22, ap_CS_fsm_state19)
    begin
        if (((icmp_ln153_reg_1485 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            grp_conv_line_buffer_shi_fu_620_data <= data_1_reg_1536;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_conv_line_buffer_shi_fu_620_data <= data_2_reg_1521;
        else 
            grp_conv_line_buffer_shi_fu_620_data <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_single_conv_calculat_fu_630_ap_start <= grp_single_conv_calculat_fu_630_ap_start_reg;
    i1_fu_1048_p2 <= std_logic_vector(unsigned(i17_0_reg_516) + unsigned(ap_const_lv2_1));
    i_2_fu_806_p2 <= std_logic_vector(unsigned(i1_0_reg_381) + unsigned(ap_const_lv2_1));
    i_6_fu_915_p2 <= std_logic_vector(unsigned(i3_0_reg_425) + unsigned(ap_const_lv2_1));
    i_7_fu_963_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(i4_0_reg_460));
    i_8_fu_1172_p2 <= std_logic_vector(unsigned(i_0_i_reg_561) + unsigned(ap_const_lv3_1));
    i_9_fu_1202_p2 <= std_logic_vector(unsigned(i_0_i1_reg_573) + unsigned(ap_const_lv2_1));
    i_fu_661_p2 <= std_logic_vector(unsigned(i_0_reg_324) + unsigned(ap_const_lv3_1));
    icmp_ln109_fu_655_p2 <= "1" when (i_0_reg_324 = ap_const_lv3_6) else "0";
    icmp_ln110_fu_702_p2 <= "1" when (j_0_reg_335 = ap_const_lv3_6) else "0";
    icmp_ln113_fu_728_p2 <= "1" when (c_0_reg_346 = ap_const_lv5_10) else "0";
    icmp_ln117_fu_756_p2 <= "1" when (img_i_0_reg_358 = ap_const_lv7_40) else "0";
    icmp_ln120_fu_783_p2 <= "1" when (ker_i_0_reg_370 = ap_const_lv4_9) else "0";
    icmp_ln125_fu_800_p2 <= "1" when (i1_0_reg_381 = ap_const_lv2_2) else "0";
    icmp_ln127_fu_852_p2 <= "1" when (j2_0_reg_404 = ap_const_lv4_8) else "0";
    icmp_ln130_fu_875_p2 <= "1" when (unsigned(j2_0_reg_404) < unsigned(ap_const_lv4_3)) else "0";
    icmp_ln143_fu_909_p2 <= "1" when (i3_0_reg_425 = ap_const_lv2_3) else "0";
    icmp_ln148_fu_957_p2 <= "1" when (i4_0_reg_460 = ap_const_lv3_6) else "0";
    icmp_ln150_fu_1018_p2 <= "1" when (j5_0_reg_483 = ap_const_lv3_6) else "0";
    icmp_ln153_fu_1030_p2 <= "1" when (unsigned(j5_0_reg_483) < unsigned(ap_const_lv3_5)) else "0";
    icmp_ln161_fu_1042_p2 <= "1" when (i17_0_reg_516 = ap_const_lv2_3) else "0";
    icmp_ln163_fu_1054_p2 <= "1" when (i17_0_reg_516 = ap_const_lv2_0) else "0";
    icmp_ln173_fu_932_p2 <= "1" when (c_0_reg_346 = ap_const_lv5_F) else "0";
    icmp_ln175_fu_999_p2 <= "1" when (i4_0_reg_460 = ap_const_lv3_0) else "0";
    icmp_ln177_fu_1119_p2 <= "1" when (tmp_2_fu_1109_p4 = ap_const_lv2_0) else "0";
    icmp_ln182_fu_1005_p2 <= "1" when (i4_0_reg_460 = ap_const_lv3_1) else "0";
    icmp_ln45_fu_1196_p2 <= "1" when (i_0_i1_reg_573 = ap_const_lv2_3) else "0";
    icmp_ln47_fu_1236_p2 <= "1" when (j_0_i_reg_597 = ap_const_lv2_3) else "0";
    icmp_ln49_fu_1271_p2 <= "1" when (signed(ans_1_i_reg_608) > signed(select_ln49_2_fu_1264_p3)) else "0";
    icmp_ln99_fu_1166_p2 <= "1" when (i_0_i_reg_561 = ap_const_lv3_5) else "0";

    img_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_CS_fsm_state20, ap_CS_fsm_state6, zext_ln118_1_fu_778_p1, zext_ln129_fu_870_p1, zext_ln144_fu_927_p1, sext_ln166_fu_1066_p1, sext_ln156_fu_1071_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            img_address0 <= sext_ln156_fu_1071_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            img_address0 <= sext_ln166_fu_1066_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            img_address0 <= zext_ln144_fu_927_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            img_address0 <= zext_ln129_fu_870_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            img_address0 <= zext_ln118_1_fu_778_p1(6 - 1 downto 0);
        else 
            img_address0 <= "XXXXXX";
        end if; 
    end process;


    img_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state17, grp_single_conv_calculat_fu_630_ap_done, ap_block_state17_on_subcall_done, ap_CS_fsm_state20, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10) or ((grp_single_conv_calculat_fu_630_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            img_ce0 <= ap_const_logic_1;
        else 
            img_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    img_i_fu_762_p2 <= std_logic_vector(unsigned(img_i_0_reg_358) + unsigned(ap_const_lv7_1));

    img_we0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            img_we0 <= ap_const_logic_1;
        else 
            img_we0 <= ap_const_logic_0;
        end if; 
    end process;

    imgtotal_address0 <= zext_ln118_fu_773_p1(10 - 1 downto 0);

    imgtotal_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            imgtotal_ce0 <= ap_const_logic_1;
        else 
            imgtotal_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_1_fu_858_p2 <= std_logic_vector(unsigned(j2_0_reg_404) + unsigned(ap_const_lv4_1));
    j_2_fu_1024_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) + unsigned(j5_0_reg_483));
    j_3_fu_1242_p2 <= std_logic_vector(unsigned(j_0_i_reg_597) + unsigned(ap_const_lv2_1));
    j_fu_708_p2 <= std_logic_vector(unsigned(j_0_reg_335) + unsigned(ap_const_lv3_1));
    ker_i_fu_789_p2 <= std_logic_vector(unsigned(ker_i_0_reg_370) + unsigned(ap_const_lv4_1));

    kernel_address0_assign_proc : process(zext_ln121_reg_1353, icmp_ln163_reg_1502, ap_CS_fsm_state17, ap_CS_fsm_state20, grp_single_conv_calculat_fu_630_kernel_address0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            kernel_address0 <= zext_ln121_reg_1353(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or ((icmp_ln163_reg_1502 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            kernel_address0 <= grp_single_conv_calculat_fu_630_kernel_address0;
        else 
            kernel_address0 <= "XXXX";
        end if; 
    end process;


    kernel_ce0_assign_proc : process(icmp_ln163_reg_1502, ap_CS_fsm_state17, ap_CS_fsm_state20, grp_single_conv_calculat_fu_630_kernel_ce0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            kernel_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or ((icmp_ln163_reg_1502 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            kernel_ce0 <= grp_single_conv_calculat_fu_630_kernel_ce0;
        else 
            kernel_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_we0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            kernel_we0 <= ap_const_logic_1;
        else 
            kernel_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_count_fu_1215_p0 <= out_count_1_fu_140;
    out_count_fu_1215_p2 <= std_logic_vector(signed(out_count_fu_1215_p0) + signed(ap_const_lv32_1));
    outtotal_address0 <= sext_ln191_fu_1221_p1(4 - 1 downto 0);

    outtotal_ce0_assign_proc : process(ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            outtotal_ce0 <= ap_const_logic_1;
        else 
            outtotal_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    outtotal_d0 <= ans_0_i_reg_584;

    outtotal_we0_assign_proc : process(icmp_ln173_reg_1436, and_ln188_reg_1586, ap_CS_fsm_state28, icmp_ln45_fu_1196_p2)
    begin
        if (((icmp_ln45_fu_1196_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln188_reg_1586) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            outtotal_we0 <= ap_const_logic_1;
        else 
            outtotal_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pool_line_buffer_address0_assign_proc : process(icmp_ln173_reg_1436, icmp_ln175_reg_1458, ap_CS_fsm_state24, and_ln182_fu_1125_p2, and_ln182_reg_1564, ap_CS_fsm_state26, icmp_ln99_fu_1166_p2, ap_CS_fsm_state27, zext_ln171_1_fu_1096_p1, zext_ln100_fu_1178_p1, zext_ln100_1_fu_1191_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            pool_line_buffer_address0 <= zext_ln100_1_fu_1191_p1(3 - 1 downto 0);
        elsif (((icmp_ln99_fu_1166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = and_ln182_reg_1564) and (icmp_ln175_reg_1458 = ap_const_lv1_0))) then 
            pool_line_buffer_address0 <= ap_const_lv3_5;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln99_fu_1166_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln182_reg_1564) and (icmp_ln175_reg_1458 = ap_const_lv1_0))) then 
            pool_line_buffer_address0 <= zext_ln100_fu_1178_p1(3 - 1 downto 0);
        elsif (((icmp_ln175_reg_1458 = ap_const_lv1_1) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            pool_line_buffer_address0 <= zext_ln171_1_fu_1096_p1(3 - 1 downto 0);
        elsif (((icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = and_ln182_fu_1125_p2) and (icmp_ln175_reg_1458 = ap_const_lv1_0))) then 
            pool_line_buffer_address0 <= ap_const_lv3_2;
        else 
            pool_line_buffer_address0 <= "XXX";
        end if; 
    end process;


    pool_line_buffer_ce0_assign_proc : process(icmp_ln173_reg_1436, icmp_ln175_reg_1458, ap_CS_fsm_state24, and_ln182_fu_1125_p2, and_ln182_reg_1564, ap_CS_fsm_state26, icmp_ln99_fu_1166_p2, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or ((icmp_ln99_fu_1166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = and_ln182_reg_1564) and (icmp_ln175_reg_1458 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln99_fu_1166_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln182_reg_1564) and (icmp_ln175_reg_1458 = ap_const_lv1_0)) or ((icmp_ln175_reg_1458 = ap_const_lv1_1) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24) and (ap_const_lv1_0 = and_ln182_fu_1125_p2) and (icmp_ln175_reg_1458 = ap_const_lv1_0)))) then 
            pool_line_buffer_ce0 <= ap_const_logic_1;
        else 
            pool_line_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pool_line_buffer_d0_assign_proc : process(pool_line_buffer_q0, icmp_ln173_reg_1436, icmp_ln175_reg_1458, add_ln171_1_fu_1101_p2, ap_CS_fsm_state24, and_ln182_reg_1564, go_up_reg_1568, ap_CS_fsm_state26, icmp_ln99_fu_1166_p2, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            pool_line_buffer_d0 <= pool_line_buffer_q0;
        elsif (((icmp_ln99_fu_1166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = and_ln182_reg_1564) and (icmp_ln175_reg_1458 = ap_const_lv1_0))) then 
            pool_line_buffer_d0 <= go_up_reg_1568;
        elsif (((icmp_ln175_reg_1458 = ap_const_lv1_1) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            pool_line_buffer_d0 <= add_ln171_1_fu_1101_p2;
        else 
            pool_line_buffer_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pool_line_buffer_we0_assign_proc : process(icmp_ln173_reg_1436, icmp_ln175_reg_1458, ap_CS_fsm_state24, and_ln182_reg_1564, ap_CS_fsm_state26, icmp_ln99_fu_1166_p2, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or ((icmp_ln99_fu_1166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26) and (ap_const_lv1_0 = and_ln182_reg_1564) and (icmp_ln175_reg_1458 = ap_const_lv1_0)) or ((icmp_ln175_reg_1458 = ap_const_lv1_1) and (icmp_ln173_reg_1436 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            pool_line_buffer_we0 <= ap_const_logic_1;
        else 
            pool_line_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln49_1_fu_1258_p3 <= 
        cal_pool_0_1_load_1_reg_1595 when (trunc_ln49_1_fu_1248_p1(0) = '1') else 
        cal_pool_0_0_load_reg_1590;
    select_ln49_2_fu_1264_p3 <= 
        select_ln49_fu_1252_p3 when (trunc_ln49_reg_1618(0) = '1') else 
        select_ln49_1_fu_1258_p3;
    select_ln49_fu_1252_p3 <= 
        cal_pool_1_1_load_1_reg_1605 when (trunc_ln49_1_fu_1248_p1(0) = '1') else 
        cal_pool_1_0_load_reg_1600;
        sext_ln111_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln111_fu_718_p2),64));

        sext_ln132_fu_894_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln132_fu_889_p2),64));

        sext_ln156_fu_1071_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(count_4_reg_471),64));

        sext_ln166_fu_1066_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(count_5_reg_495),64));

        sext_ln171_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln171_fu_1086_p2),64));

    sext_ln191_fu_1221_p0 <= out_count_1_fu_140;
        sext_ln191_fu_1221_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln191_fu_1221_p0),64));

    shl_ln_fu_744_p3 <= (trunc_ln118_fu_740_p1 & ap_const_lv6_0);
    sub_ln111_fu_691_p2 <= std_logic_vector(unsigned(zext_ln111_fu_675_p1) - unsigned(zext_ln111_1_fu_687_p1));
    sub_ln132_fu_834_p2 <= std_logic_vector(unsigned(zext_ln132_1_fu_830_p1) - unsigned(zext_ln132_fu_818_p1));
    sub_ln171_fu_993_p2 <= std_logic_vector(unsigned(zext_ln171_fu_977_p1) - unsigned(zext_ln171_2_fu_989_p1));
    tmp_1_fu_679_p3 <= (i_0_reg_324 & ap_const_lv1_0);
    tmp_2_fu_1109_p4 <= j5_0_reg_483(2 downto 1);
    tmp_3_fu_822_p3 <= (i1_0_reg_381 & ap_const_lv2_0);
    tmp_4_fu_840_p3 <= (i1_0_reg_381 & ap_const_lv3_0);
    tmp_5_fu_969_p3 <= (i4_0_reg_460 & ap_const_lv3_0);
    tmp_6_fu_981_p3 <= (i4_0_reg_460 & ap_const_lv1_0);
    tmp_fu_667_p3 <= (i_0_reg_324 & ap_const_lv3_0);
    trunc_ln118_fu_740_p1 <= c_0_reg_346(4 - 1 downto 0);
    trunc_ln148_fu_953_p1 <= i4_0_reg_460(1 - 1 downto 0);
    trunc_ln150_fu_1014_p1 <= j5_0_reg_483(1 - 1 downto 0);
    trunc_ln49_1_fu_1248_p1 <= j_0_i_reg_597(1 - 1 downto 0);
    trunc_ln49_fu_1208_p1 <= i_0_i1_reg_573(1 - 1 downto 0);
    weitotal_address0 <= zext_ln121_fu_795_p1(8 - 1 downto 0);

    weitotal_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            weitotal_ce0 <= ap_const_logic_1;
        else 
            weitotal_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln100_1_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_reg_561),64));
    zext_ln100_fu_1178_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_8_fu_1172_p2),64));
    zext_ln111_1_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_679_p3),7));
    zext_ln111_2_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_335),7));
    zext_ln111_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_667_p3),7));
    zext_ln117_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_i_0_reg_358),10));
    zext_ln118_1_fu_778_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_i_0_reg_358),64));
    zext_ln118_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln118_fu_768_p2),64));
    zext_ln121_fu_795_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ker_i_0_reg_370),64));
    zext_ln127_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_840_p3),6));
    zext_ln129_fu_870_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(count_1_reg_415),64));
    zext_ln132_1_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_822_p3),5));
    zext_ln132_2_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_0_reg_404),6));
    zext_ln132_3_fu_885_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j2_0_reg_404),5));
    zext_ln132_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_0_reg_381),5));
    zext_ln133_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln133_fu_899_p2),64));
    zext_ln144_1_fu_938_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_0_reg_425),4));
    zext_ln144_2_fu_948_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln144_1_fu_942_p2),64));
    zext_ln144_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(count_2_reg_437),64));
    zext_ln171_1_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j5_0_reg_483),64));
    zext_ln171_2_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_981_p3),7));
    zext_ln171_3_fu_1082_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j5_0_reg_483),7));
    zext_ln171_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_969_p3),7));
end behav;
