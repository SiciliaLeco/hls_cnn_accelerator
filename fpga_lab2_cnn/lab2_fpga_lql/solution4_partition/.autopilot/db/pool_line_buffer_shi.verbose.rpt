

================================================================
== Vivado HLS Report for 'pool_line_buffer_shi'
================================================================
* Date:           Sun Dec  6 12:52:29 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lab2_fpga_lql
* Solution:       solution4_partition
* Product family: artix7
* Target device:  xc7a12ti-csg325-1L


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     4.304|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    5|    5|    6|    6| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+-------+------+-----+
|       Name      | BRAM_18K| DSP48E|   FF  |  LUT | URAM|
+-----------------+---------+-------+-------+------+-----+
|DSP              |        -|      -|      -|     -|    -|
|Expression       |        -|      -|      -|     -|    -|
|FIFO             |        -|      -|      -|     -|    -|
|Instance         |        -|      -|      -|     -|    -|
|Memory           |        -|      -|      -|     -|    -|
|Multiplexer      |        -|      -|      -|   188|    -|
|Register         |        -|      -|    166|     -|    -|
+-----------------+---------+-------+-------+------+-----+
|Total            |        0|      0|    166|   188|    0|
+-----------------+---------+-------+-------+------+-----+
|Available        |       40|     40|  16000|  8000|    0|
+-----------------+---------+-------+-------+------+-----+
|Utilization (%)  |        0|      0|      1|     2|    0|
+-----------------+---------+-------+-------+------+-----+

+ Detail: 
    * Instance: 
    N/A

    * DSP48E: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    +---------------------------+----+-----------+-----+-----------+
    |            Name           | LUT| Input Size| Bits| Total Bits|
    +---------------------------+----+-----------+-----+-----------+
    |ap_NS_fsm                  |  38|          7|    1|          7|
    |cal_pool_address0          |  15|          3|    1|          3|
    |cal_pool_address1          |  15|          3|    1|          3|
    |pool_line_buffer_address0  |  33|          6|    3|         18|
    |pool_line_buffer_address1  |  27|          5|    3|         15|
    |pool_line_buffer_d0        |  27|          5|   32|        160|
    |pool_line_buffer_d1        |  15|          3|   32|         96|
    |reg_71                     |   9|          2|   32|         64|
    |reg_79                     |   9|          2|   32|         64|
    +---------------------------+----+-----------+-----+-----------+
    |Total                      | 188|         36|  137|        430|
    +---------------------------+----+-----------+-----+-----------+

    * Register: 
    +-------------------------------+----+----+-----+-----------+
    |              Name             | FF | LUT| Bits| Const Bits|
    +-------------------------------+----+----+-----+-----------+
    |ap_CS_fsm                      |   6|   0|    6|          0|
    |ap_port_reg_data               |  32|   0|   32|          0|
    |go_up_reg_86                   |  32|   0|   32|          0|
    |pool_line_buffer_loa_3_reg_91  |  32|   0|   32|          0|
    |reg_71                         |  32|   0|   32|          0|
    |reg_79                         |  32|   0|   32|          0|
    +-------------------------------+----+----+-----+-----------+
    |Total                          | 166|   0|  166|          0|
    +-------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+---------------------------+-----+-----+------------+----------------------+--------------+
|         RTL Ports         | Dir | Bits|  Protocol  |     Source Object    |    C Type    |
+---------------------------+-----+-----+------------+----------------------+--------------+
|ap_clk                     |  in |    1| ap_ctrl_hs | pool_line_buffer_shi | return value |
|ap_rst                     |  in |    1| ap_ctrl_hs | pool_line_buffer_shi | return value |
|ap_start                   |  in |    1| ap_ctrl_hs | pool_line_buffer_shi | return value |
|ap_done                    | out |    1| ap_ctrl_hs | pool_line_buffer_shi | return value |
|ap_idle                    | out |    1| ap_ctrl_hs | pool_line_buffer_shi | return value |
|ap_ready                   | out |    1| ap_ctrl_hs | pool_line_buffer_shi | return value |
|ap_ce                      |  in |    1| ap_ctrl_hs | pool_line_buffer_shi | return value |
|data                       |  in |   32|   ap_none  |         data         |    scalar    |
|cal_pool_address0          | out |    1|  ap_memory |       cal_pool       |     array    |
|cal_pool_ce0               | out |    1|  ap_memory |       cal_pool       |     array    |
|cal_pool_we0               | out |    1|  ap_memory |       cal_pool       |     array    |
|cal_pool_d0                | out |    0|  ap_memory |       cal_pool       |     array    |
|cal_pool_q0                |  in |    0|  ap_memory |       cal_pool       |     array    |
|cal_pool_address1          | out |    1|  ap_memory |       cal_pool       |     array    |
|cal_pool_ce1               | out |    1|  ap_memory |       cal_pool       |     array    |
|cal_pool_we1               | out |    1|  ap_memory |       cal_pool       |     array    |
|cal_pool_d1                | out |    0|  ap_memory |       cal_pool       |     array    |
|cal_pool_q1                |  in |    0|  ap_memory |       cal_pool       |     array    |
|pool_line_buffer_address0  | out |    3|  ap_memory |   pool_line_buffer   |     array    |
|pool_line_buffer_ce0       | out |    1|  ap_memory |   pool_line_buffer   |     array    |
|pool_line_buffer_we0       | out |    1|  ap_memory |   pool_line_buffer   |     array    |
|pool_line_buffer_d0        | out |   32|  ap_memory |   pool_line_buffer   |     array    |
|pool_line_buffer_q0        |  in |   32|  ap_memory |   pool_line_buffer   |     array    |
|pool_line_buffer_address1  | out |    3|  ap_memory |   pool_line_buffer   |     array    |
|pool_line_buffer_ce1       | out |    1|  ap_memory |   pool_line_buffer   |     array    |
|pool_line_buffer_we1       | out |    1|  ap_memory |   pool_line_buffer   |     array    |
|pool_line_buffer_d1        | out |   32|  ap_memory |   pool_line_buffer   |     array    |
|pool_line_buffer_q1        |  in |   32|  ap_memory |   pool_line_buffer   |     array    |
+---------------------------+-----+-----+------------+----------------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 6, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.15>
ST_1 : Operation 7 [2/2] (2.15ns)   --->   "%go_up = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 0), align 8" [conv.cpp:91]   --->   Operation 7 'load' 'go_up' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_1 : Operation 8 [2/2] (2.15ns)   --->   "%cal_pool_load = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 1), align 4" [conv.cpp:93]   --->   Operation 8 'load' 'cal_pool_load' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_1 : Operation 9 [2/2] (2.15ns)   --->   "%pool_line_buffer_loa = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 2), align 8" [conv.cpp:94]   --->   Operation 9 'load' 'pool_line_buffer_loa' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_1 : Operation 10 [2/2] (2.15ns)   --->   "%pool_line_buffer_loa_1 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 1), align 4" [conv.cpp:99]   --->   Operation 10 'load' 'pool_line_buffer_loa_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 2 <SV = 1> <Delay = 4.30>
ST_2 : Operation 11 [1/2] (2.15ns)   --->   "%go_up = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 0), align 8" [conv.cpp:91]   --->   Operation 11 'load' 'go_up' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 12 [1/2] (2.15ns)   --->   "%cal_pool_load = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 1), align 4" [conv.cpp:93]   --->   Operation 12 'load' 'cal_pool_load' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 13 [1/1] (2.15ns)   --->   "store i32 %cal_pool_load, i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 0), align 16" [conv.cpp:93]   --->   Operation 13 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 14 [1/2] (2.15ns)   --->   "%pool_line_buffer_loa = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 2), align 8" [conv.cpp:94]   --->   Operation 14 'load' 'pool_line_buffer_loa' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 15 [2/2] (2.15ns)   --->   "%cal_pool_load_1 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 1), align 4" [conv.cpp:95]   --->   Operation 15 'load' 'cal_pool_load_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 16 [1/2] (2.15ns)   --->   "%pool_line_buffer_loa_1 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 1), align 4" [conv.cpp:99]   --->   Operation 16 'load' 'pool_line_buffer_loa_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 17 [2/2] (2.15ns)   --->   "%pool_line_buffer_loa_2 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 3), align 4" [conv.cpp:99]   --->   Operation 17 'load' 'pool_line_buffer_loa_2' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 18 [2/2] (2.15ns)   --->   "%pool_line_buffer_loa_3 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 4), align 16" [conv.cpp:99]   --->   Operation 18 'load' 'pool_line_buffer_loa_3' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 3 <SV = 2> <Delay = 4.30>
ST_3 : Operation 19 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa, i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 1), align 4" [conv.cpp:94]   --->   Operation 19 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 20 [1/2] (2.15ns)   --->   "%cal_pool_load_1 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 1), align 4" [conv.cpp:95]   --->   Operation 20 'load' 'cal_pool_load_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 21 [1/1] (2.15ns)   --->   "store i32 %cal_pool_load_1, i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 0), align 8" [conv.cpp:95]   --->   Operation 21 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 22 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa_1, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 0), align 16" [conv.cpp:99]   --->   Operation 22 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 23 [1/2] (2.15ns)   --->   "%pool_line_buffer_loa_2 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 3), align 4" [conv.cpp:99]   --->   Operation 23 'load' 'pool_line_buffer_loa_2' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 24 [1/2] (2.15ns)   --->   "%pool_line_buffer_loa_3 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 4), align 16" [conv.cpp:99]   --->   Operation 24 'load' 'pool_line_buffer_loa_3' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 25 [2/2] (2.15ns)   --->   "%pool_line_buffer_loa_4 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 5), align 4" [conv.cpp:99]   --->   Operation 25 'load' 'pool_line_buffer_loa_4' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 4 <SV = 3> <Delay = 2.15>
ST_4 : Operation 26 [1/1] (0.00ns)   --->   "%data_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %data) nounwind" [conv.cpp:88]   --->   Operation 26 'read' 'data_read' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 27 [1/1] (2.15ns)   --->   "store i32 %data_read, i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 1), align 4" [conv.cpp:96]   --->   Operation 27 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_4 : Operation 28 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 1), align 4" [conv.cpp:99]   --->   Operation 28 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_4 : Operation 29 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa_2, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 2), align 8" [conv.cpp:99]   --->   Operation 29 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_4 : Operation 30 [1/2] (2.15ns)   --->   "%pool_line_buffer_loa_4 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 5), align 4" [conv.cpp:99]   --->   Operation 30 'load' 'pool_line_buffer_loa_4' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 5 <SV = 4> <Delay = 2.15>
ST_5 : Operation 31 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa_3, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 3), align 4" [conv.cpp:99]   --->   Operation 31 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_5 : Operation 32 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa_4, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 4), align 16" [conv.cpp:99]   --->   Operation 32 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 6 <SV = 5> <Delay = 2.15>
ST_6 : Operation 33 [1/1] (2.15ns)   --->   "store i32 %go_up, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 5), align 4" [conv.cpp:101]   --->   Operation 33 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_6 : Operation 34 [1/1] (0.00ns)   --->   "ret void" [conv.cpp:102]   --->   Operation 34 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 1
- Is top level: 0
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ data]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ cal_pool]:  wired=1; compound=1; hidden=0; nouse=0; global=1; static=1; extern=0; dir=2; type=1; pingpong=0; private_global=0; linkage=7; visibility=0; MemPort=[22]; IO mode=ap_memory:ce=0
Port [ pool_line_buffer]:  wired=1; compound=1; hidden=0; nouse=0; global=1; static=1; extern=0; dir=2; type=1; pingpong=0; private_global=0; linkage=7; visibility=0; MemPort=[22]; IO mode=ap_memory:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
go_up                  (load ) [ 0001111]
cal_pool_load          (load ) [ 0000000]
store_ln93             (store) [ 0000000]
pool_line_buffer_loa   (load ) [ 0001100]
pool_line_buffer_loa_1 (load ) [ 0001000]
store_ln94             (store) [ 0000000]
cal_pool_load_1        (load ) [ 0000000]
store_ln95             (store) [ 0000000]
store_ln99             (store) [ 0000000]
pool_line_buffer_loa_2 (load ) [ 0000100]
pool_line_buffer_loa_3 (load ) [ 0000110]
data_read              (read ) [ 0000000]
store_ln96             (store) [ 0000000]
store_ln99             (store) [ 0000000]
store_ln99             (store) [ 0000000]
pool_line_buffer_loa_4 (load ) [ 0000010]
store_ln99             (store) [ 0000000]
store_ln99             (store) [ 0000000]
store_ln101            (store) [ 0000000]
ret_ln102              (ret  ) [ 0000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="data">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="data"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="cal_pool">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="cal_pool"/><MemPortTyVec>2 2 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="pool_line_buffer">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="pool_line_buffer"/><MemPortTyVec>2 2 </MemPortTyVec>
</StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.ap_auto.i32"/></StgValue>
</bind>
</comp>

<comp id="28" class="1004" name="data_read_read_fu_28">
<pin_list>
<pin id="29" dir="0" index="0" bw="32" slack="0"/>
<pin id="30" dir="0" index="1" bw="32" slack="0"/>
<pin id="31" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="data_read/4 "/>
</bind>
</comp>

<comp id="34" class="1004" name="grp_access_fu_34">
<pin_list>
<pin id="35" dir="0" index="0" bw="32" slack="0"/>
<pin id="36" dir="0" index="1" bw="32" slack="0"/>
<pin id="37" dir="0" index="2" bw="0" slack="0"/>
<pin id="40" dir="0" index="4" bw="32" slack="0"/>
<pin id="41" dir="0" index="5" bw="32" slack="2147483647"/>
<pin id="42" dir="0" index="6" bw="0" slack="2147483647"/>
<pin id="38" dir="1" index="3" bw="32" slack="4"/>
<pin id="43" dir="1" index="7" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) store(28) " fcode="store"/>
<opset="go_up/1 cal_pool_load/1 store_ln93/2 cal_pool_load_1/2 store_ln94/3 store_ln95/3 store_ln96/4 "/>
</bind>
</comp>

<comp id="45" class="1004" name="grp_access_fu_45">
<pin_list>
<pin id="46" dir="0" index="0" bw="32" slack="0"/>
<pin id="47" dir="0" index="1" bw="32" slack="1"/>
<pin id="48" dir="0" index="2" bw="0" slack="0"/>
<pin id="51" dir="0" index="4" bw="32" slack="1"/>
<pin id="52" dir="0" index="5" bw="32" slack="2147483647"/>
<pin id="53" dir="0" index="6" bw="0" slack="2147483647"/>
<pin id="49" dir="1" index="3" bw="32" slack="1"/>
<pin id="54" dir="1" index="7" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="load(27) store(28) " fcode="store"/>
<opset="pool_line_buffer_loa/1 pool_line_buffer_loa_1/1 pool_line_buffer_loa_2/2 pool_line_buffer_loa_3/2 store_ln99/3 pool_line_buffer_loa_4/3 store_ln99/4 store_ln99/4 store_ln99/5 store_ln99/5 store_ln101/6 "/>
</bind>
</comp>

<comp id="71" class="1005" name="reg_71">
<pin_list>
<pin id="72" dir="0" index="0" bw="32" slack="1"/>
<pin id="73" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="pool_line_buffer_loa pool_line_buffer_loa_4 "/>
</bind>
</comp>

<comp id="79" class="1005" name="reg_79">
<pin_list>
<pin id="80" dir="0" index="0" bw="32" slack="1"/>
<pin id="81" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="pool_line_buffer_loa_1 pool_line_buffer_loa_2 "/>
</bind>
</comp>

<comp id="86" class="1005" name="go_up_reg_86">
<pin_list>
<pin id="87" dir="0" index="0" bw="32" slack="4"/>
<pin id="88" dir="1" index="1" bw="32" slack="4"/>
</pin_list>
<bind>
<opset="go_up "/>
</bind>
</comp>

<comp id="91" class="1005" name="pool_line_buffer_loa_3_reg_91">
<pin_list>
<pin id="92" dir="0" index="0" bw="32" slack="2"/>
<pin id="93" dir="1" index="1" bw="32" slack="2"/>
</pin_list>
<bind>
<opset="pool_line_buffer_loa_3 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="32"><net_src comp="26" pin="0"/><net_sink comp="28" pin=0"/></net>

<net id="33"><net_src comp="0" pin="0"/><net_sink comp="28" pin=1"/></net>

<net id="39"><net_src comp="6" pin="0"/><net_sink comp="34" pin=0"/></net>

<net id="44"><net_src comp="8" pin="0"/><net_sink comp="34" pin=2"/></net>

<net id="50"><net_src comp="10" pin="0"/><net_sink comp="45" pin=0"/></net>

<net id="55"><net_src comp="12" pin="0"/><net_sink comp="45" pin=2"/></net>

<net id="56"><net_src comp="34" pin="7"/><net_sink comp="34" pin=1"/></net>

<net id="57"><net_src comp="14" pin="0"/><net_sink comp="34" pin=0"/></net>

<net id="58"><net_src comp="16" pin="0"/><net_sink comp="34" pin=2"/></net>

<net id="59"><net_src comp="18" pin="0"/><net_sink comp="45" pin=0"/></net>

<net id="60"><net_src comp="20" pin="0"/><net_sink comp="45" pin=2"/></net>

<net id="61"><net_src comp="8" pin="0"/><net_sink comp="34" pin=0"/></net>

<net id="62"><net_src comp="34" pin="7"/><net_sink comp="34" pin=4"/></net>

<net id="63"><net_src comp="6" pin="0"/><net_sink comp="34" pin=2"/></net>

<net id="64"><net_src comp="22" pin="0"/><net_sink comp="45" pin=0"/></net>

<net id="65"><net_src comp="24" pin="0"/><net_sink comp="45" pin=2"/></net>

<net id="66"><net_src comp="28" pin="2"/><net_sink comp="34" pin=1"/></net>

<net id="67"><net_src comp="16" pin="0"/><net_sink comp="34" pin=0"/></net>

<net id="68"><net_src comp="12" pin="0"/><net_sink comp="45" pin=0"/></net>

<net id="69"><net_src comp="10" pin="0"/><net_sink comp="45" pin=2"/></net>

<net id="70"><net_src comp="24" pin="0"/><net_sink comp="45" pin=0"/></net>

<net id="74"><net_src comp="45" pin="3"/><net_sink comp="71" pin=0"/></net>

<net id="75"><net_src comp="71" pin="1"/><net_sink comp="34" pin=1"/></net>

<net id="76"><net_src comp="71" pin="1"/><net_sink comp="45" pin=1"/></net>

<net id="77"><net_src comp="45" pin="7"/><net_sink comp="71" pin=0"/></net>

<net id="78"><net_src comp="71" pin="1"/><net_sink comp="45" pin=4"/></net>

<net id="82"><net_src comp="45" pin="7"/><net_sink comp="79" pin=0"/></net>

<net id="83"><net_src comp="79" pin="1"/><net_sink comp="45" pin=1"/></net>

<net id="84"><net_src comp="45" pin="3"/><net_sink comp="79" pin=0"/></net>

<net id="85"><net_src comp="79" pin="1"/><net_sink comp="45" pin=4"/></net>

<net id="89"><net_src comp="34" pin="3"/><net_sink comp="86" pin=0"/></net>

<net id="90"><net_src comp="86" pin="1"/><net_sink comp="45" pin=1"/></net>

<net id="94"><net_src comp="45" pin="7"/><net_sink comp="91" pin=0"/></net>

<net id="95"><net_src comp="91" pin="1"/><net_sink comp="45" pin=1"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: data | {}
	Port: cal_pool | {2 3 4 }
	Port: pool_line_buffer | {3 4 5 6 }
 - Input state : 
	Port: pool_line_buffer_shi : data | {4 }
	Port: pool_line_buffer_shi : cal_pool | {1 2 3 }
	Port: pool_line_buffer_shi : pool_line_buffer | {1 2 3 4 }
  - Chain level:
	State 1
	State 2
		store_ln93 : 1
	State 3
		store_ln95 : 1
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|----------------------|
| Operation|    Functional Unit   |
|----------|----------------------|
|   read   | data_read_read_fu_28 |
|----------|----------------------|
|   Total  |                      |
|----------|----------------------|

Memories:
N/A

* Register list:
+-----------------------------+--------+
|                             |   FF   |
+-----------------------------+--------+
|         go_up_reg_86        |   32   |
|pool_line_buffer_loa_3_reg_91|   32   |
|            reg_71           |   32   |
|            reg_79           |   32   |
+-----------------------------+--------+
|            Total            |   128  |
+-----------------------------+--------+

* Multiplexer (MUX) list: 
|------------------|------|------|------|--------||---------||---------|
|       Comp       |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|------------------|------|------|------|--------||---------||---------|
| grp_access_fu_34 |  p0  |   4  |  32  |   128  ||    9    |
| grp_access_fu_34 |  p1  |   3  |  32  |   96   ||    15   |
| grp_access_fu_34 |  p2  |   3  |   0  |    0   |
| grp_access_fu_45 |  p0  |   5  |  32  |   160  ||    9    |
| grp_access_fu_45 |  p1  |   4  |  32  |   128  ||    21   |
| grp_access_fu_45 |  p2  |   4  |   0  |    0   ||    9    |
| grp_access_fu_45 |  p4  |   2  |  32  |   64   ||    9    |
|      reg_71      |  p0  |   2  |  32  |   64   ||    9    |
|      reg_79      |  p0  |   2  |  32  |   64   ||    9    |
|------------------|------|------|------|--------||---------||---------|
|       Total      |      |      |      |   704  || 15.4682 ||    90   |
|------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    -   |    -   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|   15   |    -   |   90   |
|  Register |    -   |   128  |    -   |
+-----------+--------+--------+--------+
|   Total   |   15   |   128  |   90   |
+-----------+--------+--------+--------+
