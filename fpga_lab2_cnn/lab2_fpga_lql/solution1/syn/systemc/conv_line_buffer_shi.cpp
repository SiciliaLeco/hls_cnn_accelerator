// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "conv_line_buffer_shi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic conv_line_buffer_shi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic conv_line_buffer_shi::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> conv_line_buffer_shi::ap_ST_fsm_state1 = "1";
const sc_lv<9> conv_line_buffer_shi::ap_ST_fsm_state2 = "10";
const sc_lv<9> conv_line_buffer_shi::ap_ST_fsm_state3 = "100";
const sc_lv<9> conv_line_buffer_shi::ap_ST_fsm_state4 = "1000";
const sc_lv<9> conv_line_buffer_shi::ap_ST_fsm_state5 = "10000";
const sc_lv<9> conv_line_buffer_shi::ap_ST_fsm_state6 = "100000";
const sc_lv<9> conv_line_buffer_shi::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> conv_line_buffer_shi::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> conv_line_buffer_shi::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> conv_line_buffer_shi::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> conv_line_buffer_shi::ap_const_lv32_1 = "1";
const sc_lv<32> conv_line_buffer_shi::ap_const_lv32_2 = "10";
const sc_lv<1> conv_line_buffer_shi::ap_const_lv1_0 = "0";
const sc_lv<32> conv_line_buffer_shi::ap_const_lv32_3 = "11";
const sc_lv<32> conv_line_buffer_shi::ap_const_lv32_4 = "100";
const sc_lv<32> conv_line_buffer_shi::ap_const_lv32_6 = "110";
const sc_lv<32> conv_line_buffer_shi::ap_const_lv32_7 = "111";
const sc_lv<2> conv_line_buffer_shi::ap_const_lv2_0 = "00";
const sc_lv<1> conv_line_buffer_shi::ap_const_lv1_1 = "1";
const sc_lv<32> conv_line_buffer_shi::ap_const_lv32_5 = "101";
const sc_lv<32> conv_line_buffer_shi::ap_const_lv32_8 = "1000";
const sc_lv<4> conv_line_buffer_shi::ap_const_lv4_0 = "0000";
const sc_lv<4> conv_line_buffer_shi::ap_const_lv4_3 = "11";
const sc_lv<4> conv_line_buffer_shi::ap_const_lv4_6 = "110";
const sc_lv<2> conv_line_buffer_shi::ap_const_lv2_3 = "11";
const sc_lv<2> conv_line_buffer_shi::ap_const_lv2_1 = "1";
const sc_lv<3> conv_line_buffer_shi::ap_const_lv3_0 = "000";
const sc_lv<5> conv_line_buffer_shi::ap_const_lv5_3 = "11";
const sc_lv<59> conv_line_buffer_shi::ap_const_lv59_0 = "00000000000000000000000000000000000000000000000000000000000";
const sc_lv<2> conv_line_buffer_shi::ap_const_lv2_2 = "10";
const sc_lv<5> conv_line_buffer_shi::ap_const_lv5_7 = "111";
const sc_lv<4> conv_line_buffer_shi::ap_const_lv4_8 = "1000";
const sc_lv<4> conv_line_buffer_shi::ap_const_lv4_1 = "1";
const sc_lv<4> conv_line_buffer_shi::ap_const_lv4_7 = "111";
const bool conv_line_buffer_shi::ap_const_boolean_1 = true;

conv_line_buffer_shi::conv_line_buffer_shi(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln68_1_fu_283_p2);
    sensitive << ( sub_ln68_reg_434 );
    sensitive << ( zext_ln68_3_fu_279_p1 );

    SC_METHOD(thread_add_ln68_fu_269_p2);
    sensitive << ( sub_ln68_reg_434 );
    sensitive << ( zext_ln68_2_fu_265_p1 );

    SC_METHOD(thread_add_ln70_fu_292_p2);
    sensitive << ( sub_ln68_reg_434 );
    sensitive << ( zext_ln70_fu_288_p1 );

    SC_METHOD(thread_add_ln83_1_fu_397_p2);
    sensitive << ( zext_ln81_reg_481 );
    sensitive << ( zext_ln83_2_fu_393_p1 );

    SC_METHOD(thread_add_ln83_fu_383_p2);
    sensitive << ( zext_ln81_reg_481 );
    sensitive << ( zext_ln83_fu_379_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln76_fu_312_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln76_fu_312_p2 );

    SC_METHOD(thread_cal_conv_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_4_fu_257_p3 );
    sensitive << ( icmp_ln65_fu_245_p2 );
    sensitive << ( sext_ln68_fu_274_p1 );
    sensitive << ( sext_ln70_fu_297_p1 );

    SC_METHOD(thread_cal_conv_address1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sext_ln68_1_fu_308_p1 );

    SC_METHOD(thread_cal_conv_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_4_fu_257_p3 );
    sensitive << ( icmp_ln65_fu_245_p2 );

    SC_METHOD(thread_cal_conv_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_cal_conv_d0);
    sensitive << ( data );
    sensitive << ( tmp_3_reg_441 );
    sensitive << ( conv_line_buffer_loa_reg_446 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_4_fu_257_p3 );
    sensitive << ( icmp_ln65_fu_245_p2 );

    SC_METHOD(thread_cal_conv_d1);
    sensitive << ( cal_conv_q0 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_cal_conv_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( tmp_4_fu_257_p3 );
    sensitive << ( icmp_ln65_fu_245_p2 );

    SC_METHOD(thread_cal_conv_we1);
    sensitive << ( tmp_4_reg_459 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_conv_line_buffer_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( conv_line_buffer_add_1_reg_487 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln80_fu_373_p2 );
    sensitive << ( icmp_ln78_fu_361_p2 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_8_fu_206_p3 );
    sensitive << ( zext_ln83_1_fu_388_p1 );
    sensitive << ( zext_ln83_3_fu_402_p1 );

    SC_METHOD(thread_conv_line_buffer_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln80_fu_373_p2 );
    sensitive << ( icmp_ln78_fu_361_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_conv_line_buffer_d0);
    sensitive << ( conv_line_buffer_q0 );
    sensitive << ( select_ln81_reg_492 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln80_fu_373_p2 );
    sensitive << ( icmp_ln78_fu_361_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_conv_line_buffer_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln80_fu_373_p2 );
    sensitive << ( icmp_ln80_reg_505 );
    sensitive << ( icmp_ln78_fu_361_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_i_10_fu_318_p2);
    sensitive << ( i1_0_reg_158 );

    SC_METHOD(thread_i_fu_186_p2);
    sensitive << ( i_0_reg_135 );

    SC_METHOD(thread_icmp_ln63_fu_180_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_0_reg_135 );

    SC_METHOD(thread_icmp_ln65_fu_245_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_icmp_ln76_fu_312_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i1_0_reg_158 );

    SC_METHOD(thread_icmp_ln78_fu_361_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( j2_0_reg_169 );

    SC_METHOD(thread_icmp_ln80_fu_373_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln78_fu_361_p2 );
    sensitive << ( j2_0_reg_169 );

    SC_METHOD(thread_j_4_fu_367_p2);
    sensitive << ( j2_0_reg_169 );

    SC_METHOD(thread_j_fu_251_p2);
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_or_ln70_fu_200_p2);
    sensitive << ( tmp_7_fu_192_p3 );

    SC_METHOD(thread_or_ln81_fu_336_p2);
    sensitive << ( tmp_9_fu_324_p3 );

    SC_METHOD(thread_select_ln81_fu_355_p3);
    sensitive << ( go_up_0_reg_411 );
    sensitive << ( go_up_1_reg_416 );
    sensitive << ( trunc_ln81_fu_351_p1 );

    SC_METHOD(thread_sext_ln68_1_fu_308_p1);
    sensitive << ( add_ln68_1_reg_468 );

    SC_METHOD(thread_sext_ln68_fu_274_p1);
    sensitive << ( add_ln68_fu_269_p2 );

    SC_METHOD(thread_sext_ln70_fu_297_p1);
    sensitive << ( add_ln70_fu_292_p2 );

    SC_METHOD(thread_sub_ln68_fu_231_p2);
    sensitive << ( zext_ln68_1_fu_227_p1 );
    sensitive << ( zext_ln68_fu_215_p1 );

    SC_METHOD(thread_tmp_4_fu_257_p3);
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_tmp_7_fu_192_p3);
    sensitive << ( i_0_reg_135 );

    SC_METHOD(thread_tmp_8_fu_206_p3);
    sensitive << ( or_ln70_fu_200_p2 );

    SC_METHOD(thread_tmp_9_fu_324_p3);
    sensitive << ( i1_0_reg_158 );

    SC_METHOD(thread_tmp_fu_219_p3);
    sensitive << ( i_0_reg_135 );

    SC_METHOD(thread_tmp_s_fu_342_p3);
    sensitive << ( or_ln81_fu_336_p2 );

    SC_METHOD(thread_trunc_ln81_fu_351_p1);
    sensitive << ( i1_0_reg_158 );

    SC_METHOD(thread_zext_ln68_1_fu_227_p1);
    sensitive << ( tmp_fu_219_p3 );

    SC_METHOD(thread_zext_ln68_2_fu_265_p1);
    sensitive << ( j_fu_251_p2 );

    SC_METHOD(thread_zext_ln68_3_fu_279_p1);
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_zext_ln68_fu_215_p1);
    sensitive << ( i_0_reg_135 );

    SC_METHOD(thread_zext_ln70_fu_288_p1);
    sensitive << ( j_0_reg_147 );

    SC_METHOD(thread_zext_ln81_fu_332_p1);
    sensitive << ( tmp_9_fu_324_p3 );

    SC_METHOD(thread_zext_ln83_1_fu_388_p1);
    sensitive << ( add_ln83_fu_383_p2 );

    SC_METHOD(thread_zext_ln83_2_fu_393_p1);
    sensitive << ( j2_0_reg_169 );

    SC_METHOD(thread_zext_ln83_3_fu_402_p1);
    sensitive << ( add_ln83_1_reg_514 );

    SC_METHOD(thread_zext_ln83_fu_379_p1);
    sensitive << ( j_4_fu_367_p2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln63_fu_180_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln65_fu_245_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln76_fu_312_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln78_fu_361_p2 );

    ap_CS_fsm = "000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "conv_line_buffer_shi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data, "(port)data");
    sc_trace(mVcdFile, conv_line_buffer_address0, "(port)conv_line_buffer_address0");
    sc_trace(mVcdFile, conv_line_buffer_ce0, "(port)conv_line_buffer_ce0");
    sc_trace(mVcdFile, conv_line_buffer_we0, "(port)conv_line_buffer_we0");
    sc_trace(mVcdFile, conv_line_buffer_d0, "(port)conv_line_buffer_d0");
    sc_trace(mVcdFile, conv_line_buffer_q0, "(port)conv_line_buffer_q0");
    sc_trace(mVcdFile, cal_conv_address0, "(port)cal_conv_address0");
    sc_trace(mVcdFile, cal_conv_ce0, "(port)cal_conv_ce0");
    sc_trace(mVcdFile, cal_conv_we0, "(port)cal_conv_we0");
    sc_trace(mVcdFile, cal_conv_d0, "(port)cal_conv_d0");
    sc_trace(mVcdFile, cal_conv_q0, "(port)cal_conv_q0");
    sc_trace(mVcdFile, cal_conv_address1, "(port)cal_conv_address1");
    sc_trace(mVcdFile, cal_conv_ce1, "(port)cal_conv_ce1");
    sc_trace(mVcdFile, cal_conv_we1, "(port)cal_conv_we1");
    sc_trace(mVcdFile, cal_conv_d1, "(port)cal_conv_d1");
    sc_trace(mVcdFile, cal_conv_q1, "(port)cal_conv_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, go_up_0_reg_411, "go_up_0_reg_411");
    sc_trace(mVcdFile, go_up_1_reg_416, "go_up_1_reg_416");
    sc_trace(mVcdFile, i_fu_186_p2, "i_fu_186_p2");
    sc_trace(mVcdFile, i_reg_424, "i_reg_424");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln63_fu_180_p2, "icmp_ln63_fu_180_p2");
    sc_trace(mVcdFile, sub_ln68_fu_231_p2, "sub_ln68_fu_231_p2");
    sc_trace(mVcdFile, sub_ln68_reg_434, "sub_ln68_reg_434");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_3_reg_441, "tmp_3_reg_441");
    sc_trace(mVcdFile, conv_line_buffer_loa_reg_446, "conv_line_buffer_loa_reg_446");
    sc_trace(mVcdFile, j_fu_251_p2, "j_fu_251_p2");
    sc_trace(mVcdFile, j_reg_454, "j_reg_454");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_4_fu_257_p3, "tmp_4_fu_257_p3");
    sc_trace(mVcdFile, tmp_4_reg_459, "tmp_4_reg_459");
    sc_trace(mVcdFile, icmp_ln65_fu_245_p2, "icmp_ln65_fu_245_p2");
    sc_trace(mVcdFile, add_ln68_1_fu_283_p2, "add_ln68_1_fu_283_p2");
    sc_trace(mVcdFile, add_ln68_1_reg_468, "add_ln68_1_reg_468");
    sc_trace(mVcdFile, i_10_fu_318_p2, "i_10_fu_318_p2");
    sc_trace(mVcdFile, i_10_reg_476, "i_10_reg_476");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln81_fu_332_p1, "zext_ln81_fu_332_p1");
    sc_trace(mVcdFile, zext_ln81_reg_481, "zext_ln81_reg_481");
    sc_trace(mVcdFile, icmp_ln76_fu_312_p2, "icmp_ln76_fu_312_p2");
    sc_trace(mVcdFile, conv_line_buffer_add_1_reg_487, "conv_line_buffer_add_1_reg_487");
    sc_trace(mVcdFile, select_ln81_fu_355_p3, "select_ln81_fu_355_p3");
    sc_trace(mVcdFile, select_ln81_reg_492, "select_ln81_reg_492");
    sc_trace(mVcdFile, j_4_fu_367_p2, "j_4_fu_367_p2");
    sc_trace(mVcdFile, j_4_reg_500, "j_4_reg_500");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, icmp_ln80_fu_373_p2, "icmp_ln80_fu_373_p2");
    sc_trace(mVcdFile, icmp_ln80_reg_505, "icmp_ln80_reg_505");
    sc_trace(mVcdFile, icmp_ln78_fu_361_p2, "icmp_ln78_fu_361_p2");
    sc_trace(mVcdFile, add_ln83_1_fu_397_p2, "add_ln83_1_fu_397_p2");
    sc_trace(mVcdFile, add_ln83_1_reg_514, "add_ln83_1_reg_514");
    sc_trace(mVcdFile, i_0_reg_135, "i_0_reg_135");
    sc_trace(mVcdFile, j_0_reg_147, "j_0_reg_147");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, i1_0_reg_158, "i1_0_reg_158");
    sc_trace(mVcdFile, j2_0_reg_169, "j2_0_reg_169");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, tmp_8_fu_206_p3, "tmp_8_fu_206_p3");
    sc_trace(mVcdFile, sext_ln68_fu_274_p1, "sext_ln68_fu_274_p1");
    sc_trace(mVcdFile, sext_ln70_fu_297_p1, "sext_ln70_fu_297_p1");
    sc_trace(mVcdFile, sext_ln68_1_fu_308_p1, "sext_ln68_1_fu_308_p1");
    sc_trace(mVcdFile, tmp_s_fu_342_p3, "tmp_s_fu_342_p3");
    sc_trace(mVcdFile, zext_ln83_1_fu_388_p1, "zext_ln83_1_fu_388_p1");
    sc_trace(mVcdFile, zext_ln83_3_fu_402_p1, "zext_ln83_3_fu_402_p1");
    sc_trace(mVcdFile, tmp_7_fu_192_p3, "tmp_7_fu_192_p3");
    sc_trace(mVcdFile, or_ln70_fu_200_p2, "or_ln70_fu_200_p2");
    sc_trace(mVcdFile, tmp_fu_219_p3, "tmp_fu_219_p3");
    sc_trace(mVcdFile, zext_ln68_1_fu_227_p1, "zext_ln68_1_fu_227_p1");
    sc_trace(mVcdFile, zext_ln68_fu_215_p1, "zext_ln68_fu_215_p1");
    sc_trace(mVcdFile, zext_ln68_2_fu_265_p1, "zext_ln68_2_fu_265_p1");
    sc_trace(mVcdFile, add_ln68_fu_269_p2, "add_ln68_fu_269_p2");
    sc_trace(mVcdFile, zext_ln68_3_fu_279_p1, "zext_ln68_3_fu_279_p1");
    sc_trace(mVcdFile, zext_ln70_fu_288_p1, "zext_ln70_fu_288_p1");
    sc_trace(mVcdFile, add_ln70_fu_292_p2, "add_ln70_fu_292_p2");
    sc_trace(mVcdFile, tmp_9_fu_324_p3, "tmp_9_fu_324_p3");
    sc_trace(mVcdFile, or_ln81_fu_336_p2, "or_ln81_fu_336_p2");
    sc_trace(mVcdFile, trunc_ln81_fu_351_p1, "trunc_ln81_fu_351_p1");
    sc_trace(mVcdFile, zext_ln83_fu_379_p1, "zext_ln83_fu_379_p1");
    sc_trace(mVcdFile, add_ln83_fu_383_p2, "add_ln83_fu_383_p2");
    sc_trace(mVcdFile, zext_ln83_2_fu_393_p1, "zext_ln83_2_fu_393_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

conv_line_buffer_shi::~conv_line_buffer_shi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void conv_line_buffer_shi::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln63_fu_180_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_158 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(icmp_ln78_fu_361_p2.read(), ap_const_lv1_1))) {
        i1_0_reg_158 = i_10_reg_476.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln65_fu_245_p2.read(), ap_const_lv1_1))) {
        i_0_reg_135 = i_reg_424.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_0_reg_135 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln76_fu_312_p2.read()))) {
        j2_0_reg_169 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        j2_0_reg_169 = j_4_reg_500.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_147 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        j_0_reg_147 = j_reg_454.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_245_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_257_p3.read()))) {
        add_ln68_1_reg_468 = add_ln68_1_fu_283_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln78_fu_361_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_fu_373_p2.read()))) {
        add_ln83_1_reg_514 = add_ln83_1_fu_397_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln76_fu_312_p2.read()))) {
        conv_line_buffer_add_1_reg_487 =  (sc_lv<4>) (tmp_s_fu_342_p3.read());
        select_ln81_reg_492 = select_ln81_fu_355_p3.read();
        zext_ln81_reg_481 = zext_ln81_fu_332_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        conv_line_buffer_loa_reg_446 = conv_line_buffer_q0.read();
        sub_ln68_reg_434 = sub_ln68_fu_231_p2.read();
        tmp_3_reg_441 = i_0_reg_135.read().range(1, 1);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        go_up_0_reg_411 = cal_conv_q0.read();
        go_up_1_reg_416 = cal_conv_q1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_10_reg_476 = i_10_fu_318_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_reg_424 = i_fu_186_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln78_fu_361_p2.read()))) {
        icmp_ln80_reg_505 = icmp_ln80_fu_373_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_4_reg_500 = j_4_fu_367_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_reg_454 = j_fu_251_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_245_p2.read()))) {
        tmp_4_reg_459 = j_0_reg_147.read().range(1, 1);
    }
}

void conv_line_buffer_shi::thread_add_ln68_1_fu_283_p2() {
    add_ln68_1_fu_283_p2 = (!sub_ln68_reg_434.read().is_01() || !zext_ln68_3_fu_279_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln68_reg_434.read()) + sc_biguint<5>(zext_ln68_3_fu_279_p1.read()));
}

void conv_line_buffer_shi::thread_add_ln68_fu_269_p2() {
    add_ln68_fu_269_p2 = (!sub_ln68_reg_434.read().is_01() || !zext_ln68_2_fu_265_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln68_reg_434.read()) + sc_biguint<5>(zext_ln68_2_fu_265_p1.read()));
}

void conv_line_buffer_shi::thread_add_ln70_fu_292_p2() {
    add_ln70_fu_292_p2 = (!sub_ln68_reg_434.read().is_01() || !zext_ln70_fu_288_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln68_reg_434.read()) + sc_biguint<5>(zext_ln70_fu_288_p1.read()));
}

void conv_line_buffer_shi::thread_add_ln83_1_fu_397_p2() {
    add_ln83_1_fu_397_p2 = (!zext_ln81_reg_481.read().is_01() || !zext_ln83_2_fu_393_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln81_reg_481.read()) + sc_biguint<6>(zext_ln83_2_fu_393_p1.read()));
}

void conv_line_buffer_shi::thread_add_ln83_fu_383_p2() {
    add_ln83_fu_383_p2 = (!zext_ln81_reg_481.read().is_01() || !zext_ln83_fu_379_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln81_reg_481.read()) + sc_biguint<6>(zext_ln83_fu_379_p1.read()));
}

void conv_line_buffer_shi::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void conv_line_buffer_shi::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void conv_line_buffer_shi::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void conv_line_buffer_shi::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void conv_line_buffer_shi::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void conv_line_buffer_shi::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void conv_line_buffer_shi::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void conv_line_buffer_shi::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void conv_line_buffer_shi::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void conv_line_buffer_shi::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
          esl_seteq<1,1,1>(icmp_ln76_fu_312_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void conv_line_buffer_shi::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void conv_line_buffer_shi::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln76_fu_312_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void conv_line_buffer_shi::thread_cal_conv_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_245_p2.read()) && 
         esl_seteq<1,1,1>(tmp_4_fu_257_p3.read(), ap_const_lv1_1))) {
        cal_conv_address0 =  (sc_lv<4>) (sext_ln70_fu_297_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_245_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_257_p3.read()))) {
        cal_conv_address0 =  (sc_lv<4>) (sext_ln68_fu_274_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        cal_conv_address0 = ap_const_lv4_3;
    } else {
        cal_conv_address0 = "XXXX";
    }
}

void conv_line_buffer_shi::thread_cal_conv_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        cal_conv_address1 =  (sc_lv<4>) (sext_ln68_1_fu_308_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        cal_conv_address1 = ap_const_lv4_6;
    } else {
        cal_conv_address1 = "XXXX";
    }
}

void conv_line_buffer_shi::thread_cal_conv_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_245_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_257_p3.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_245_p2.read()) && 
          esl_seteq<1,1,1>(tmp_4_fu_257_p3.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        cal_conv_ce0 = ap_const_logic_1;
    } else {
        cal_conv_ce0 = ap_const_logic_0;
    }
}

void conv_line_buffer_shi::thread_cal_conv_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)))) {
        cal_conv_ce1 = ap_const_logic_1;
    } else {
        cal_conv_ce1 = ap_const_logic_0;
    }
}

void conv_line_buffer_shi::thread_cal_conv_d0() {
    cal_conv_d0 = (!tmp_3_reg_441.read()[0].is_01())? sc_lv<32>(): ((tmp_3_reg_441.read()[0].to_bool())? data.read(): conv_line_buffer_loa_reg_446.read());
}

void conv_line_buffer_shi::thread_cal_conv_d1() {
    cal_conv_d1 = cal_conv_q0.read();
}

void conv_line_buffer_shi::thread_cal_conv_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln65_fu_245_p2.read()) && 
         esl_seteq<1,1,1>(tmp_4_fu_257_p3.read(), ap_const_lv1_1))) {
        cal_conv_we0 = ap_const_logic_1;
    } else {
        cal_conv_we0 = ap_const_logic_0;
    }
}

void conv_line_buffer_shi::thread_cal_conv_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_reg_459.read()))) {
        cal_conv_we1 = ap_const_logic_1;
    } else {
        cal_conv_we1 = ap_const_logic_0;
    }
}

void conv_line_buffer_shi::thread_conv_line_buffer_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        conv_line_buffer_address0 =  (sc_lv<4>) (zext_ln83_3_fu_402_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln78_fu_361_p2.read()) && 
                esl_seteq<1,1,1>(icmp_ln80_fu_373_p2.read(), ap_const_lv1_1))) {
        conv_line_buffer_address0 = conv_line_buffer_add_1_reg_487.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln78_fu_361_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_fu_373_p2.read()))) {
        conv_line_buffer_address0 =  (sc_lv<4>) (zext_ln83_1_fu_388_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        conv_line_buffer_address0 =  (sc_lv<4>) (tmp_8_fu_206_p3.read());
    } else {
        conv_line_buffer_address0 = "XXXX";
    }
}

void conv_line_buffer_shi::thread_conv_line_buffer_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln78_fu_361_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_fu_373_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln78_fu_361_p2.read()) && 
          esl_seteq<1,1,1>(icmp_ln80_fu_373_p2.read(), ap_const_lv1_1)))) {
        conv_line_buffer_ce0 = ap_const_logic_1;
    } else {
        conv_line_buffer_ce0 = ap_const_logic_0;
    }
}

void conv_line_buffer_shi::thread_conv_line_buffer_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        conv_line_buffer_d0 = conv_line_buffer_q0.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln78_fu_361_p2.read()) && 
                esl_seteq<1,1,1>(icmp_ln80_fu_373_p2.read(), ap_const_lv1_1))) {
        conv_line_buffer_d0 = select_ln81_reg_492.read();
    } else {
        conv_line_buffer_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void conv_line_buffer_shi::thread_conv_line_buffer_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln80_reg_505.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln78_fu_361_p2.read()) && 
          esl_seteq<1,1,1>(icmp_ln80_fu_373_p2.read(), ap_const_lv1_1)))) {
        conv_line_buffer_we0 = ap_const_logic_1;
    } else {
        conv_line_buffer_we0 = ap_const_logic_0;
    }
}

void conv_line_buffer_shi::thread_i_10_fu_318_p2() {
    i_10_fu_318_p2 = (!i1_0_reg_158.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_0_reg_158.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv_line_buffer_shi::thread_i_fu_186_p2() {
    i_fu_186_p2 = (!i_0_reg_135.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_reg_135.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv_line_buffer_shi::thread_icmp_ln63_fu_180_p2() {
    icmp_ln63_fu_180_p2 = (!i_0_reg_135.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_135.read() == ap_const_lv2_3);
}

void conv_line_buffer_shi::thread_icmp_ln65_fu_245_p2() {
    icmp_ln65_fu_245_p2 = (!j_0_reg_147.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_147.read() == ap_const_lv2_3);
}

void conv_line_buffer_shi::thread_icmp_ln76_fu_312_p2() {
    icmp_ln76_fu_312_p2 = (!i1_0_reg_158.read().is_01() || !ap_const_lv2_2.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_158.read() == ap_const_lv2_2);
}

void conv_line_buffer_shi::thread_icmp_ln78_fu_361_p2() {
    icmp_ln78_fu_361_p2 = (!j2_0_reg_169.read().is_01() || !ap_const_lv4_8.is_01())? sc_lv<1>(): sc_lv<1>(j2_0_reg_169.read() == ap_const_lv4_8);
}

void conv_line_buffer_shi::thread_icmp_ln80_fu_373_p2() {
    icmp_ln80_fu_373_p2 = (!j2_0_reg_169.read().is_01() || !ap_const_lv4_7.is_01())? sc_lv<1>(): sc_lv<1>(j2_0_reg_169.read() == ap_const_lv4_7);
}

void conv_line_buffer_shi::thread_j_4_fu_367_p2() {
    j_4_fu_367_p2 = (!j2_0_reg_169.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j2_0_reg_169.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void conv_line_buffer_shi::thread_j_fu_251_p2() {
    j_fu_251_p2 = (!j_0_reg_147.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_0_reg_147.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void conv_line_buffer_shi::thread_or_ln70_fu_200_p2() {
    or_ln70_fu_200_p2 = (tmp_7_fu_192_p3.read() | ap_const_lv5_3);
}

void conv_line_buffer_shi::thread_or_ln81_fu_336_p2() {
    or_ln81_fu_336_p2 = (tmp_9_fu_324_p3.read() | ap_const_lv5_7);
}

void conv_line_buffer_shi::thread_select_ln81_fu_355_p3() {
    select_ln81_fu_355_p3 = (!trunc_ln81_fu_351_p1.read()[0].is_01())? sc_lv<32>(): ((trunc_ln81_fu_351_p1.read()[0].to_bool())? go_up_1_reg_416.read(): go_up_0_reg_411.read());
}

void conv_line_buffer_shi::thread_sext_ln68_1_fu_308_p1() {
    sext_ln68_1_fu_308_p1 = esl_sext<64,5>(add_ln68_1_reg_468.read());
}

void conv_line_buffer_shi::thread_sext_ln68_fu_274_p1() {
    sext_ln68_fu_274_p1 = esl_sext<64,5>(add_ln68_fu_269_p2.read());
}

void conv_line_buffer_shi::thread_sext_ln70_fu_297_p1() {
    sext_ln70_fu_297_p1 = esl_sext<64,5>(add_ln70_fu_292_p2.read());
}

void conv_line_buffer_shi::thread_sub_ln68_fu_231_p2() {
    sub_ln68_fu_231_p2 = (!zext_ln68_1_fu_227_p1.read().is_01() || !zext_ln68_fu_215_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln68_1_fu_227_p1.read()) - sc_biguint<5>(zext_ln68_fu_215_p1.read()));
}

void conv_line_buffer_shi::thread_tmp_4_fu_257_p3() {
    tmp_4_fu_257_p3 = j_0_reg_147.read().range(1, 1);
}

void conv_line_buffer_shi::thread_tmp_7_fu_192_p3() {
    tmp_7_fu_192_p3 = esl_concat<2,3>(i_0_reg_135.read(), ap_const_lv3_0);
}

void conv_line_buffer_shi::thread_tmp_8_fu_206_p3() {
    tmp_8_fu_206_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln70_fu_200_p2.read());
}

void conv_line_buffer_shi::thread_tmp_9_fu_324_p3() {
    tmp_9_fu_324_p3 = esl_concat<2,3>(i1_0_reg_158.read(), ap_const_lv3_0);
}

void conv_line_buffer_shi::thread_tmp_fu_219_p3() {
    tmp_fu_219_p3 = esl_concat<2,2>(i_0_reg_135.read(), ap_const_lv2_0);
}

void conv_line_buffer_shi::thread_tmp_s_fu_342_p3() {
    tmp_s_fu_342_p3 = esl_concat<59,5>(ap_const_lv59_0, or_ln81_fu_336_p2.read());
}

void conv_line_buffer_shi::thread_trunc_ln81_fu_351_p1() {
    trunc_ln81_fu_351_p1 = i1_0_reg_158.read().range(1-1, 0);
}

void conv_line_buffer_shi::thread_zext_ln68_1_fu_227_p1() {
    zext_ln68_1_fu_227_p1 = esl_zext<5,4>(tmp_fu_219_p3.read());
}

void conv_line_buffer_shi::thread_zext_ln68_2_fu_265_p1() {
    zext_ln68_2_fu_265_p1 = esl_zext<5,2>(j_fu_251_p2.read());
}

void conv_line_buffer_shi::thread_zext_ln68_3_fu_279_p1() {
    zext_ln68_3_fu_279_p1 = esl_zext<5,2>(j_0_reg_147.read());
}

void conv_line_buffer_shi::thread_zext_ln68_fu_215_p1() {
    zext_ln68_fu_215_p1 = esl_zext<5,2>(i_0_reg_135.read());
}

void conv_line_buffer_shi::thread_zext_ln70_fu_288_p1() {
    zext_ln70_fu_288_p1 = esl_zext<5,2>(j_0_reg_147.read());
}

void conv_line_buffer_shi::thread_zext_ln81_fu_332_p1() {
    zext_ln81_fu_332_p1 = esl_zext<6,5>(tmp_9_fu_324_p3.read());
}

void conv_line_buffer_shi::thread_zext_ln83_1_fu_388_p1() {
    zext_ln83_1_fu_388_p1 = esl_zext<64,6>(add_ln83_fu_383_p2.read());
}

void conv_line_buffer_shi::thread_zext_ln83_2_fu_393_p1() {
    zext_ln83_2_fu_393_p1 = esl_zext<6,4>(j2_0_reg_169.read());
}

void conv_line_buffer_shi::thread_zext_ln83_3_fu_402_p1() {
    zext_ln83_3_fu_402_p1 = esl_zext<64,6>(add_ln83_1_reg_514.read());
}

void conv_line_buffer_shi::thread_zext_ln83_fu_379_p1() {
    zext_ln83_fu_379_p1 = esl_zext<6,4>(j_4_fu_367_p2.read());
}

void conv_line_buffer_shi::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln63_fu_180_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln65_fu_245_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln76_fu_312_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(icmp_ln78_fu_361_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

}

