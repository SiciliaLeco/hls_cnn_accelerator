

================================================================
== Vivado HLS Report for 'single_pool_calculat'
================================================================
* Date:           Sun Dec  6 12:52:16 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lab2_fpga_lql
* Solution:       solution4_partition
* Product family: artix7
* Target device:  xc7a12ti-csg325-1L


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     7.972|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    4|    4|    4|    4| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 1
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 4, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 4, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.15>
ST_1 : Operation 6 [2/2] (2.15ns)   --->   "%cal_pool_load = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 0), align 16" [conv.cpp:48]   --->   Operation 6 'load' 'cal_pool_load' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>
ST_1 : Operation 7 [2/2] (2.15ns)   --->   "%cal_pool_load_1 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 1), align 4" [conv.cpp:48]   --->   Operation 7 'load' 'cal_pool_load_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>

State 2 <SV = 1> <Delay = 6.47>
ST_2 : Operation 8 [1/2] (2.15ns)   --->   "%cal_pool_load = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 0), align 16" [conv.cpp:48]   --->   Operation 8 'load' 'cal_pool_load' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>
ST_2 : Operation 9 [1/1] (0.00ns)   --->   "%trunc_ln48 = trunc i32 %cal_pool_load to i31" [conv.cpp:48]   --->   Operation 9 'trunc' 'trunc_ln48' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %cal_pool_load, i32 31)" [conv.cpp:48]   --->   Operation 10 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.94ns)   --->   "%select_ln48 = select i1 %tmp, i31 0, i31 %trunc_ln48" [conv.cpp:48]   --->   Operation 11 'select' 'select_ln48' <Predicate = true> <Delay = 0.94> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i31 %select_ln48 to i32" [conv.cpp:48]   --->   Operation 12 'zext' 'zext_ln48' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/2] (2.15ns)   --->   "%cal_pool_load_1 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 1), align 4" [conv.cpp:48]   --->   Operation 13 'load' 'cal_pool_load_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%trunc_ln48_1 = trunc i32 %cal_pool_load_1 to i31" [conv.cpp:48]   --->   Operation 14 'trunc' 'trunc_ln48_1' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (2.43ns)   --->   "%icmp_ln48 = icmp sgt i32 %zext_ln48, %cal_pool_load_1" [conv.cpp:48]   --->   Operation 15 'icmp' 'icmp_ln48' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.94ns)   --->   "%select_ln48_1 = select i1 %icmp_ln48, i31 %select_ln48, i31 %trunc_ln48_1" [conv.cpp:48]   --->   Operation 16 'select' 'select_ln48_1' <Predicate = true> <Delay = 0.94> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 17 [2/2] (2.15ns)   --->   "%cal_pool_load_2 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 0), align 8" [conv.cpp:48]   --->   Operation 17 'load' 'cal_pool_load_2' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>
ST_2 : Operation 18 [2/2] (2.15ns)   --->   "%cal_pool_load_3 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 1), align 4" [conv.cpp:48]   --->   Operation 18 'load' 'cal_pool_load_3' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>

State 3 <SV = 2> <Delay = 7.97>
ST_3 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln48_1 = zext i31 %select_ln48_1 to i32" [conv.cpp:48]   --->   Operation 19 'zext' 'zext_ln48_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 20 [1/2] (2.15ns)   --->   "%cal_pool_load_2 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 0), align 8" [conv.cpp:48]   --->   Operation 20 'load' 'cal_pool_load_2' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>
ST_3 : Operation 21 [1/1] (0.00ns)   --->   "%trunc_ln48_2 = trunc i32 %cal_pool_load_2 to i31" [conv.cpp:48]   --->   Operation 21 'trunc' 'trunc_ln48_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 22 [1/1] (2.43ns)   --->   "%icmp_ln48_1 = icmp sgt i32 %zext_ln48_1, %cal_pool_load_2" [conv.cpp:48]   --->   Operation 22 'icmp' 'icmp_ln48_1' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 23 [1/1] (0.94ns)   --->   "%select_ln48_2 = select i1 %icmp_ln48_1, i31 %select_ln48_1, i31 %trunc_ln48_2" [conv.cpp:48]   --->   Operation 23 'select' 'select_ln48_2' <Predicate = true> <Delay = 0.94> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln48_2 = zext i31 %select_ln48_2 to i32" [conv.cpp:48]   --->   Operation 24 'zext' 'zext_ln48_2' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/2] (2.15ns)   --->   "%cal_pool_load_3 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 1), align 4" [conv.cpp:48]   --->   Operation 25 'load' 'cal_pool_load_3' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%trunc_ln48_3 = trunc i32 %cal_pool_load_3 to i31" [conv.cpp:48]   --->   Operation 26 'trunc' 'trunc_ln48_3' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (2.43ns)   --->   "%icmp_ln48_2 = icmp sgt i32 %zext_ln48_2, %cal_pool_load_3" [conv.cpp:48]   --->   Operation 27 'icmp' 'icmp_ln48_2' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [2/2] (2.15ns)   --->   "%cal_pool_load_4 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 1, i64 0, i64 0), align 16" [conv.cpp:48]   --->   Operation 28 'load' 'cal_pool_load_4' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>
ST_3 : Operation 29 [2/2] (2.15ns)   --->   "%cal_pool_load_5 = load i32* getelementptr ([2 x [2 x i32]]* @cal_pool, i64 1, i64 0, i64 1), align 4" [conv.cpp:48]   --->   Operation 29 'load' 'cal_pool_load_5' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>

State 4 <SV = 3> <Delay = 7.97>
ST_4 : Operation 30 [1/1] (0.94ns)   --->   "%select_ln48_3 = select i1 %icmp_ln48_2, i31 %select_ln48_2, i31 %trunc_ln48_3" [conv.cpp:48]   --->   Operation 30 'select' 'select_ln48_3' <Predicate = true> <Delay = 0.94> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln48_3 = zext i31 %select_ln48_3 to i32" [conv.cpp:48]   --->   Operation 31 'zext' 'zext_ln48_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 32 [1/2] (2.15ns)   --->   "%cal_pool_load_4 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 1, i64 0, i64 0), align 16" [conv.cpp:48]   --->   Operation 32 'load' 'cal_pool_load_4' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%trunc_ln48_4 = trunc i32 %cal_pool_load_4 to i31" [conv.cpp:48]   --->   Operation 33 'trunc' 'trunc_ln48_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (2.43ns)   --->   "%icmp_ln48_3 = icmp sgt i32 %zext_ln48_3, %cal_pool_load_4" [conv.cpp:48]   --->   Operation 34 'icmp' 'icmp_ln48_3' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 35 [1/1] (0.94ns)   --->   "%select_ln48_4 = select i1 %icmp_ln48_3, i31 %select_ln48_3, i31 %trunc_ln48_4" [conv.cpp:48]   --->   Operation 35 'select' 'select_ln48_4' <Predicate = true> <Delay = 0.94> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln48_4 = zext i31 %select_ln48_4 to i32" [conv.cpp:48]   --->   Operation 36 'zext' 'zext_ln48_4' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 37 [1/2] (2.15ns)   --->   "%cal_pool_load_5 = load i32* getelementptr ([2 x [2 x i32]]* @cal_pool, i64 1, i64 0, i64 1), align 4" [conv.cpp:48]   --->   Operation 37 'load' 'cal_pool_load_5' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%trunc_ln48_5 = trunc i32 %cal_pool_load_5 to i31" [conv.cpp:48]   --->   Operation 38 'trunc' 'trunc_ln48_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (2.43ns)   --->   "%icmp_ln48_4 = icmp sgt i32 %zext_ln48_4, %cal_pool_load_5" [conv.cpp:48]   --->   Operation 39 'icmp' 'icmp_ln48_4' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 40 [2/2] (2.15ns)   --->   "%cal_pool_load_6 = load i32* getelementptr ([2 x [2 x i32]]* @cal_pool, i64 1, i64 1, i64 0), align 8" [conv.cpp:48]   --->   Operation 40 'load' 'cal_pool_load_6' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>

State 5 <SV = 4> <Delay = 5.53>
ST_5 : Operation 41 [1/1] (0.94ns)   --->   "%select_ln48_5 = select i1 %icmp_ln48_4, i31 %select_ln48_4, i31 %trunc_ln48_5" [conv.cpp:48]   --->   Operation 41 'select' 'select_ln48_5' <Predicate = true> <Delay = 0.94> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%zext_ln48_5 = zext i31 %select_ln48_5 to i32" [conv.cpp:48]   --->   Operation 42 'zext' 'zext_ln48_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/2] (2.15ns)   --->   "%cal_pool_load_6 = load i32* getelementptr ([2 x [2 x i32]]* @cal_pool, i64 1, i64 1, i64 0), align 8" [conv.cpp:48]   --->   Operation 43 'load' 'cal_pool_load_6' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 0> <Depth = 2> <RAM>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%trunc_ln48_6 = trunc i32 %cal_pool_load_6 to i31" [conv.cpp:48]   --->   Operation 44 'trunc' 'trunc_ln48_6' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (2.43ns)   --->   "%icmp_ln48_5 = icmp sgt i32 %zext_ln48_5, %cal_pool_load_6" [conv.cpp:48]   --->   Operation 45 'icmp' 'icmp_ln48_5' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.43> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 46 [1/1] (0.94ns)   --->   "%select_ln48_6 = select i1 %icmp_ln48_5, i31 %select_ln48_5, i31 %trunc_ln48_6" [conv.cpp:48]   --->   Operation 46 'select' 'select_ln48_6' <Predicate = true> <Delay = 0.94> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "ret i31 %select_ln48_6" [conv.cpp:51]   --->   Operation 47 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.15ns
The critical path consists of the following:
	'load' operation ('cal_pool_load', conv.cpp:48) on array 'cal_pool' [1]  (2.15 ns)

 <State 2>: 6.48ns
The critical path consists of the following:
	'load' operation ('cal_pool_load', conv.cpp:48) on array 'cal_pool' [1]  (2.15 ns)
	'select' operation ('select_ln48', conv.cpp:48) [4]  (0.944 ns)
	'icmp' operation ('icmp_ln48', conv.cpp:48) [8]  (2.44 ns)
	'select' operation ('select_ln48_1', conv.cpp:48) [9]  (0.944 ns)

 <State 3>: 7.97ns
The critical path consists of the following:
	'load' operation ('cal_pool_load_2', conv.cpp:48) on array 'cal_pool' [11]  (2.15 ns)
	'icmp' operation ('icmp_ln48_1', conv.cpp:48) [13]  (2.44 ns)
	'select' operation ('select_ln48_2', conv.cpp:48) [14]  (0.944 ns)
	'icmp' operation ('icmp_ln48_2', conv.cpp:48) [18]  (2.44 ns)

 <State 4>: 7.97ns
The critical path consists of the following:
	'load' operation ('cal_pool_load_4', conv.cpp:48) on array 'cal_pool' [21]  (2.15 ns)
	'icmp' operation ('icmp_ln48_3', conv.cpp:48) [23]  (2.44 ns)
	'select' operation ('select_ln48_4', conv.cpp:48) [24]  (0.944 ns)
	'icmp' operation ('icmp_ln48_4', conv.cpp:48) [28]  (2.44 ns)

 <State 5>: 5.53ns
The critical path consists of the following:
	'load' operation ('cal_pool_load_6', conv.cpp:48) on array 'cal_pool' [31]  (2.15 ns)
	'icmp' operation ('icmp_ln48_5', conv.cpp:48) [33]  (2.44 ns)
	'select' operation ('select_ln48_6', conv.cpp:48) [34]  (0.944 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
