-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity single_conv_calculat is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    cal_conv_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cal_conv_0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_0_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    cal_conv_0_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_0_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    cal_conv_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cal_conv_1_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_1_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    cal_conv_1_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_1_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    cal_conv_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    cal_conv_2_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_2_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    cal_conv_2_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_2_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of single_conv_calculat is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal mul_ln34_6_fu_44_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_6_reg_199 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal mul_ln34_7_fu_58_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_7_reg_204 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_8_fu_72_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_8_reg_209 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_4_fu_86_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_4_reg_214 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_5_fu_100_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_5_reg_219 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_5_fu_110_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_5_reg_224 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_fu_123_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_reg_229 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_1_fu_137_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_1_reg_234 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_2_fu_151_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_2_reg_239 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_3_fu_165_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_3_reg_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_6_fu_175_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_6_reg_249 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_6_fu_44_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_6_fu_44_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal mul_ln34_7_fu_58_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_7_fu_58_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_8_fu_72_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_8_fu_72_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_4_fu_86_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_4_fu_86_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_5_fu_100_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_5_fu_100_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_4_fu_106_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_fu_123_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_fu_123_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_1_fu_137_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_1_fu_137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_2_fu_151_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_2_fu_151_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_3_fu_165_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln34_3_fu_165_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_3_fu_171_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_1_fu_184_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_fu_180_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_2_fu_188_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln34_7_fu_194_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal cal_conv_0_0_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_0_0_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_0_1_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_0_1_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_0_2_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_0_2_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_1_0_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_1_0_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_1_1_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_1_1_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_1_2_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_1_2_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_2_0_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_2_0_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_2_1_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_2_1_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal cal_conv_2_2_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal kernel_2_2_int_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_int_reg : STD_LOGIC_VECTOR (31 downto 0);


begin




    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                add_ln34_5_reg_224 <= add_ln34_5_fu_110_p2;
                add_ln34_6_reg_249 <= add_ln34_6_fu_175_p2;
                mul_ln34_1_reg_234 <= mul_ln34_1_fu_137_p2;
                mul_ln34_2_reg_239 <= mul_ln34_2_fu_151_p2;
                mul_ln34_3_reg_244 <= mul_ln34_3_fu_165_p2;
                mul_ln34_4_reg_214 <= mul_ln34_4_fu_86_p2;
                mul_ln34_5_reg_219 <= mul_ln34_5_fu_100_p2;
                mul_ln34_6_reg_199 <= mul_ln34_6_fu_44_p2;
                mul_ln34_7_reg_204 <= mul_ln34_7_fu_58_p2;
                mul_ln34_8_reg_209 <= mul_ln34_8_fu_72_p2;
                mul_ln34_reg_229 <= mul_ln34_fu_123_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= add_ln34_7_fu_194_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                cal_conv_0_0_int_reg <= cal_conv_0_0;
                cal_conv_0_1_int_reg <= cal_conv_0_1;
                cal_conv_0_2_int_reg <= cal_conv_0_2;
                cal_conv_1_0_int_reg <= cal_conv_1_0;
                cal_conv_1_1_int_reg <= cal_conv_1_1;
                cal_conv_1_2_int_reg <= cal_conv_1_2;
                cal_conv_2_0_int_reg <= cal_conv_2_0;
                cal_conv_2_1_int_reg <= cal_conv_2_1;
                cal_conv_2_2_int_reg <= cal_conv_2_2;
                kernel_0_0_int_reg <= kernel_0_0;
                kernel_0_1_int_reg <= kernel_0_1;
                kernel_0_2_int_reg <= kernel_0_2;
                kernel_1_0_int_reg <= kernel_1_0;
                kernel_1_1_int_reg <= kernel_1_1;
                kernel_1_2_int_reg <= kernel_1_2;
                kernel_2_0_int_reg <= kernel_2_0;
                kernel_2_1_int_reg <= kernel_2_1;
                kernel_2_2_int_reg <= kernel_2_2;
            end if;
        end if;
    end process;
    add_ln34_1_fu_184_p2 <= std_logic_vector(unsigned(mul_ln34_2_reg_239) + unsigned(mul_ln34_3_reg_244));
    add_ln34_2_fu_188_p2 <= std_logic_vector(unsigned(add_ln34_1_fu_184_p2) + unsigned(add_ln34_fu_180_p2));
    add_ln34_3_fu_171_p2 <= std_logic_vector(unsigned(mul_ln34_4_reg_214) + unsigned(mul_ln34_5_reg_219));
    add_ln34_4_fu_106_p2 <= std_logic_vector(unsigned(mul_ln34_7_reg_204) + unsigned(mul_ln34_8_reg_209));
    add_ln34_5_fu_110_p2 <= std_logic_vector(unsigned(add_ln34_4_fu_106_p2) + unsigned(mul_ln34_6_reg_199));
    add_ln34_6_fu_175_p2 <= std_logic_vector(unsigned(add_ln34_5_reg_224) + unsigned(add_ln34_3_fu_171_p2));
    add_ln34_7_fu_194_p2 <= std_logic_vector(unsigned(add_ln34_6_reg_249) + unsigned(add_ln34_2_fu_188_p2));
    add_ln34_fu_180_p2 <= std_logic_vector(unsigned(mul_ln34_reg_229) + unsigned(mul_ln34_1_reg_234));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(add_ln34_7_fu_194_p2, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= add_ln34_7_fu_194_p2;
        end if; 
    end process;

    mul_ln34_1_fu_137_p0 <= cal_conv_0_1_int_reg;
    mul_ln34_1_fu_137_p1 <= kernel_0_1_int_reg;
    mul_ln34_1_fu_137_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln34_1_fu_137_p0) * signed(mul_ln34_1_fu_137_p1))), 32));
    mul_ln34_2_fu_151_p0 <= cal_conv_0_2_int_reg;
    mul_ln34_2_fu_151_p1 <= kernel_0_2_int_reg;
    mul_ln34_2_fu_151_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln34_2_fu_151_p0) * signed(mul_ln34_2_fu_151_p1))), 32));
    mul_ln34_3_fu_165_p0 <= cal_conv_1_0_int_reg;
    mul_ln34_3_fu_165_p1 <= kernel_1_0_int_reg;
    mul_ln34_3_fu_165_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln34_3_fu_165_p0) * signed(mul_ln34_3_fu_165_p1))), 32));
    mul_ln34_4_fu_86_p0 <= cal_conv_1_1_int_reg;
    mul_ln34_4_fu_86_p1 <= kernel_1_1_int_reg;
    mul_ln34_4_fu_86_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln34_4_fu_86_p0) * signed(mul_ln34_4_fu_86_p1))), 32));
    mul_ln34_5_fu_100_p0 <= cal_conv_1_2_int_reg;
    mul_ln34_5_fu_100_p1 <= kernel_1_2_int_reg;
    mul_ln34_5_fu_100_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln34_5_fu_100_p0) * signed(mul_ln34_5_fu_100_p1))), 32));
    mul_ln34_6_fu_44_p0 <= cal_conv_2_0_int_reg;
    mul_ln34_6_fu_44_p1 <= kernel_2_0_int_reg;
    mul_ln34_6_fu_44_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln34_6_fu_44_p0) * signed(mul_ln34_6_fu_44_p1))), 32));
    mul_ln34_7_fu_58_p0 <= cal_conv_2_1_int_reg;
    mul_ln34_7_fu_58_p1 <= kernel_2_1_int_reg;
    mul_ln34_7_fu_58_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln34_7_fu_58_p0) * signed(mul_ln34_7_fu_58_p1))), 32));
    mul_ln34_8_fu_72_p0 <= cal_conv_2_2_int_reg;
    mul_ln34_8_fu_72_p1 <= kernel_2_2_int_reg;
    mul_ln34_8_fu_72_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln34_8_fu_72_p0) * signed(mul_ln34_8_fu_72_p1))), 32));
    mul_ln34_fu_123_p0 <= cal_conv_0_0_int_reg;
    mul_ln34_fu_123_p1 <= kernel_0_0_int_reg;
    mul_ln34_fu_123_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(mul_ln34_fu_123_p0) * signed(mul_ln34_fu_123_p1))), 32));
end behav;
