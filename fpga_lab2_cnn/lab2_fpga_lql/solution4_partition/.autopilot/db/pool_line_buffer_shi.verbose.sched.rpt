

================================================================
== Vivado HLS Report for 'pool_line_buffer_shi'
================================================================
* Date:           Sun Dec  6 12:52:17 2020

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        lab2_fpga_lql
* Solution:       solution4_partition
* Product family: artix7
* Target device:  xc7a12ti-csg325-1L


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     4.304|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+----------+
    |  Latency  |  Interval | Pipeline |
    | min | max | min | max |   Type   |
    +-----+-----+-----+-----+----------+
    |    5|    5|    6|    6| function |
    +-----+-----+-----+-----+----------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 0
IsPipeline: 1
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 6
* Pipeline : 1
  Pipeline-0 : II = 6, D = 6, States = { 1 2 3 4 5 6 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.15>
ST_1 : Operation 7 [2/2] (2.15ns)   --->   "%go_up = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 0), align 8" [conv.cpp:91]   --->   Operation 7 'load' 'go_up' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_1 : Operation 8 [2/2] (2.15ns)   --->   "%cal_pool_load = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 1), align 4" [conv.cpp:93]   --->   Operation 8 'load' 'cal_pool_load' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_1 : Operation 9 [2/2] (2.15ns)   --->   "%pool_line_buffer_loa = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 2), align 8" [conv.cpp:94]   --->   Operation 9 'load' 'pool_line_buffer_loa' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_1 : Operation 10 [2/2] (2.15ns)   --->   "%pool_line_buffer_loa_1 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 1), align 4" [conv.cpp:99]   --->   Operation 10 'load' 'pool_line_buffer_loa_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 2 <SV = 1> <Delay = 4.30>
ST_2 : Operation 11 [1/2] (2.15ns)   --->   "%go_up = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 0), align 8" [conv.cpp:91]   --->   Operation 11 'load' 'go_up' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 12 [1/2] (2.15ns)   --->   "%cal_pool_load = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 1), align 4" [conv.cpp:93]   --->   Operation 12 'load' 'cal_pool_load' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 13 [1/1] (2.15ns)   --->   "store i32 %cal_pool_load, i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 0), align 16" [conv.cpp:93]   --->   Operation 13 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 14 [1/2] (2.15ns)   --->   "%pool_line_buffer_loa = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 2), align 8" [conv.cpp:94]   --->   Operation 14 'load' 'pool_line_buffer_loa' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 15 [2/2] (2.15ns)   --->   "%cal_pool_load_1 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 1), align 4" [conv.cpp:95]   --->   Operation 15 'load' 'cal_pool_load_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 16 [1/2] (2.15ns)   --->   "%pool_line_buffer_loa_1 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 1), align 4" [conv.cpp:99]   --->   Operation 16 'load' 'pool_line_buffer_loa_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 17 [2/2] (2.15ns)   --->   "%pool_line_buffer_loa_2 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 3), align 4" [conv.cpp:99]   --->   Operation 17 'load' 'pool_line_buffer_loa_2' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_2 : Operation 18 [2/2] (2.15ns)   --->   "%pool_line_buffer_loa_3 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 4), align 16" [conv.cpp:99]   --->   Operation 18 'load' 'pool_line_buffer_loa_3' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 3 <SV = 2> <Delay = 4.30>
ST_3 : Operation 19 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa, i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 0, i64 1), align 4" [conv.cpp:94]   --->   Operation 19 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 20 [1/2] (2.15ns)   --->   "%cal_pool_load_1 = load i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 1), align 4" [conv.cpp:95]   --->   Operation 20 'load' 'cal_pool_load_1' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 21 [1/1] (2.15ns)   --->   "store i32 %cal_pool_load_1, i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 0), align 8" [conv.cpp:95]   --->   Operation 21 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 22 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa_1, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 0), align 16" [conv.cpp:99]   --->   Operation 22 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 23 [1/2] (2.15ns)   --->   "%pool_line_buffer_loa_2 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 3), align 4" [conv.cpp:99]   --->   Operation 23 'load' 'pool_line_buffer_loa_2' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 24 [1/2] (2.15ns)   --->   "%pool_line_buffer_loa_3 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 4), align 16" [conv.cpp:99]   --->   Operation 24 'load' 'pool_line_buffer_loa_3' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_3 : Operation 25 [2/2] (2.15ns)   --->   "%pool_line_buffer_loa_4 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 5), align 4" [conv.cpp:99]   --->   Operation 25 'load' 'pool_line_buffer_loa_4' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 4 <SV = 3> <Delay = 2.15>
ST_4 : Operation 26 [1/1] (0.00ns)   --->   "%data_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %data) nounwind" [conv.cpp:88]   --->   Operation 26 'read' 'data_read' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 27 [1/1] (2.15ns)   --->   "store i32 %data_read, i32* getelementptr inbounds ([2 x [2 x i32]]* @cal_pool, i64 0, i64 1, i64 1), align 4" [conv.cpp:96]   --->   Operation 27 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_4 : Operation 28 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 1), align 4" [conv.cpp:99]   --->   Operation 28 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_4 : Operation 29 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa_2, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 2), align 8" [conv.cpp:99]   --->   Operation 29 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_4 : Operation 30 [1/2] (2.15ns)   --->   "%pool_line_buffer_loa_4 = load i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 5), align 4" [conv.cpp:99]   --->   Operation 30 'load' 'pool_line_buffer_loa_4' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 5 <SV = 4> <Delay = 2.15>
ST_5 : Operation 31 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa_3, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 3), align 4" [conv.cpp:99]   --->   Operation 31 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_5 : Operation 32 [1/1] (2.15ns)   --->   "store i32 %pool_line_buffer_loa_4, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 4), align 16" [conv.cpp:99]   --->   Operation 32 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>

State 6 <SV = 5> <Delay = 2.15>
ST_6 : Operation 33 [1/1] (2.15ns)   --->   "store i32 %go_up, i32* getelementptr inbounds ([6 x i32]* @pool_line_buffer, i64 0, i64 5), align 4" [conv.cpp:101]   --->   Operation 33 'store' <Predicate = true> <Delay = 2.15> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6> <RAM>
ST_6 : Operation 34 [1/1] (0.00ns)   --->   "ret void" [conv.cpp:102]   --->   Operation 34 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 2.15ns
The critical path consists of the following:
	'load' operation ('go_up', conv.cpp:91) on array 'cal_pool' [3]  (2.15 ns)

 <State 2>: 4.3ns
The critical path consists of the following:
	'load' operation ('cal_pool_load', conv.cpp:93) on array 'cal_pool' [4]  (2.15 ns)
	'store' operation ('store_ln93', conv.cpp:93) of variable 'cal_pool_load', conv.cpp:93 on array 'cal_pool' [5]  (2.15 ns)

 <State 3>: 4.3ns
The critical path consists of the following:
	'load' operation ('cal_pool_load_1', conv.cpp:95) on array 'cal_pool' [8]  (2.15 ns)
	'store' operation ('store_ln95', conv.cpp:95) of variable 'cal_pool_load_1', conv.cpp:95 on array 'cal_pool' [9]  (2.15 ns)

 <State 4>: 2.15ns
The critical path consists of the following:
	wire read on port 'data' (conv.cpp:88) [2]  (0 ns)
	'store' operation ('store_ln96', conv.cpp:96) of variable 'data', conv.cpp:88 on array 'cal_pool' [10]  (2.15 ns)

 <State 5>: 2.15ns
The critical path consists of the following:
	'store' operation ('store_ln99', conv.cpp:99) of variable 'pool_line_buffer_loa_3', conv.cpp:99 on array 'pool_line_buffer' [17]  (2.15 ns)

 <State 6>: 2.15ns
The critical path consists of the following:
	'store' operation ('store_ln101', conv.cpp:101) of variable 'go_up', conv.cpp:91 on array 'pool_line_buffer' [20]  (2.15 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
