// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _conv_line_buffer_shi_HH_
#define _conv_line_buffer_shi_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct conv_line_buffer_shi : public sc_module {
    // Port declarations 44
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > data;
    sc_in< sc_lv<32> > cal_conv_1_0_i;
    sc_out< sc_lv<32> > cal_conv_1_0_o;
    sc_out< sc_logic > cal_conv_1_0_o_ap_vld;
    sc_in< sc_lv<32> > cal_conv_2_0_i;
    sc_out< sc_lv<32> > cal_conv_2_0_o;
    sc_out< sc_logic > cal_conv_2_0_o_ap_vld;
    sc_in< sc_lv<32> > cal_conv_0_1_i;
    sc_out< sc_lv<32> > cal_conv_0_1_o;
    sc_out< sc_logic > cal_conv_0_1_o_ap_vld;
    sc_out< sc_lv<32> > cal_conv_0_0;
    sc_out< sc_logic > cal_conv_0_0_ap_vld;
    sc_in< sc_lv<32> > cal_conv_0_2_i;
    sc_out< sc_lv<32> > cal_conv_0_2_o;
    sc_out< sc_logic > cal_conv_0_2_o_ap_vld;
    sc_in< sc_lv<32> > cal_conv_1_1_i;
    sc_out< sc_lv<32> > cal_conv_1_1_o;
    sc_out< sc_logic > cal_conv_1_1_o_ap_vld;
    sc_in< sc_lv<32> > cal_conv_1_2_i;
    sc_out< sc_lv<32> > cal_conv_1_2_o;
    sc_out< sc_logic > cal_conv_1_2_o_ap_vld;
    sc_in< sc_lv<32> > cal_conv_2_1_i;
    sc_out< sc_lv<32> > cal_conv_2_1_o;
    sc_out< sc_logic > cal_conv_2_1_o_ap_vld;
    sc_in< sc_lv<32> > cal_conv_2_2_i;
    sc_out< sc_lv<32> > cal_conv_2_2_o;
    sc_out< sc_logic > cal_conv_2_2_o_ap_vld;
    sc_out< sc_lv<4> > conv_line_buffer_address0;
    sc_out< sc_logic > conv_line_buffer_ce0;
    sc_out< sc_logic > conv_line_buffer_we0;
    sc_out< sc_lv<32> > conv_line_buffer_d0;
    sc_in< sc_lv<32> > conv_line_buffer_q0;
    sc_out< sc_lv<4> > conv_line_buffer_address1;
    sc_out< sc_logic > conv_line_buffer_ce1;
    sc_out< sc_logic > conv_line_buffer_we1;
    sc_out< sc_lv<32> > conv_line_buffer_d1;
    sc_in< sc_lv<32> > conv_line_buffer_q1;
    sc_in< sc_logic > ap_ce;


    // Module declarations
    conv_line_buffer_shi(sc_module_name name);
    SC_HAS_PROCESS(conv_line_buffer_shi);

    ~conv_line_buffer_shi();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_92;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > reg_98;
    sc_signal< sc_lv<32> > conv_line_buffer_loa_reg_190;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > conv_line_buffer_loa_1_reg_196;
    sc_signal< sc_lv<32> > conv_line_buffer_loa_4_reg_202;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<32> > conv_line_buffer_loa_5_reg_207;
    sc_signal< sc_lv<32> > conv_line_buffer_loa_6_reg_212;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > conv_line_buffer_loa_7_reg_217;
    sc_signal< sc_lv<32> > conv_line_buffer_loa_8_reg_222;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > conv_line_buffer_loa_9_reg_227;
    sc_signal< sc_lv<32> > conv_line_buffer_loa_10_reg_232;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > conv_line_buffer_loa_11_reg_237;
    sc_signal< sc_lv<32> > ap_port_reg_data;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<4> ap_const_lv4_3;
    static const sc_lv<4> ap_const_lv4_B;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<4> ap_const_lv4_2;
    static const sc_lv<4> ap_const_lv4_4;
    static const sc_lv<4> ap_const_lv4_5;
    static const sc_lv<4> ap_const_lv4_6;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<4> ap_const_lv4_9;
    static const sc_lv<4> ap_const_lv4_A;
    static const sc_lv<4> ap_const_lv4_C;
    static const sc_lv<4> ap_const_lv4_D;
    static const sc_lv<4> ap_const_lv4_E;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<32> ap_const_lv32_D;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_cal_conv_0_0();
    void thread_cal_conv_0_0_ap_vld();
    void thread_cal_conv_0_1_o();
    void thread_cal_conv_0_1_o_ap_vld();
    void thread_cal_conv_0_2_o();
    void thread_cal_conv_0_2_o_ap_vld();
    void thread_cal_conv_1_0_o();
    void thread_cal_conv_1_0_o_ap_vld();
    void thread_cal_conv_1_1_o();
    void thread_cal_conv_1_1_o_ap_vld();
    void thread_cal_conv_1_2_o();
    void thread_cal_conv_1_2_o_ap_vld();
    void thread_cal_conv_2_0_o();
    void thread_cal_conv_2_0_o_ap_vld();
    void thread_cal_conv_2_1_o();
    void thread_cal_conv_2_1_o_ap_vld();
    void thread_cal_conv_2_2_o();
    void thread_cal_conv_2_2_o_ap_vld();
    void thread_conv_line_buffer_address0();
    void thread_conv_line_buffer_address1();
    void thread_conv_line_buffer_ce0();
    void thread_conv_line_buffer_ce1();
    void thread_conv_line_buffer_d0();
    void thread_conv_line_buffer_d1();
    void thread_conv_line_buffer_we0();
    void thread_conv_line_buffer_we1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
